package cn.uce.suc.common.biz.imp;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.annotation.Resource;

import org.apache.commons.io.FileUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.common.biz.IActivityAdvertBiz;
import cn.uce.suc.common.entity.ActivityAdvert;
import cn.uce.suc.common.service.ActivityAdvertService;
import cn.uce.suc.common.vo.ActivityAdvertVo;
/**
 * @Description: 首页banner表BIZ实现类
 * @author yanglei
 * @date 2017年12月06日 上午09:46:40
 */
@Service("activityAdvertBiz")
public class ActivityAdvertBiz implements IActivityAdvertBiz {
	/**
	 * 上传app路径
	 */
	@Value("${filePath}")
	private String uploadfilePath;
	
	/**
	 * 日志
	 */
	private final static Logger logger = LoggerFactory.getLogger(ActivityAdvertBiz.class);
	/**
	 * 注入活动广告宣传表Service
	 */
	@Resource
	private ActivityAdvertService activityAdvertService;
	
	/**
	 * @Description: 新增活动广告宣传表
	 * @param activityAdvert
	 * @return 受影响行数
	 * @author yanglei
	 * @date 2017年12月06日 上午09:46:40
	 */
	public int addActivityAdvert(ActivityAdvertVo vo) {
		ActivityAdvert entity=new ActivityAdvert();
		entity.setStatus("1");
		BeanUtils.copyProperties(vo, entity);
		//上传文件
		uploadFile(vo);
		entity.setImageUrlOriginal(vo.getImageUrlOriginal());
		entity.setCreateTime(new Date());
		return activityAdvertService.addActivityAdvert(entity);
	}
	/**
	 * @Description: 上传文件
	 * @param versionVo
	 * @author lixueyuan
	 * @date 2017年11月27日 上午10:48:04
	 */
	private void uploadFile(ActivityAdvertVo versionVo) {
		//获取到文件
		MultipartFile uploadFile = versionVo.getUploadFile();
		if( null!=uploadFile && !uploadFile.isEmpty()){
			String newfileName = uploadFile.getOriginalFilename();
			String path = uploadfilePath + File.separator + new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
			File newFile = new File(path,newfileName);
			/*String  oldFilePath = versionVo.getUrl();
			File oldFile;
			if(null != oldFilePath&&!"".equals(oldFilePath)){
				oldFile = new File(oldFilePath.substring(0,oldFilePath.lastIndexOf(File.separator )));
			}else{
				oldFile = new File("");
			}*/
			try {
				/*if(oldFile.exists()){
					logger.info("公告原附件删除开始");
					FileUtils.forceDelete(oldFile);
					logger.info("公告原附件删除结束");
				}*/
				logger.info("文件上传开始");
				FileUtils.copyInputStreamToFile(uploadFile.getInputStream(),newFile);
				logger.info("文件上传结束");
				versionVo.setImageUrlOriginal(newFile.getPath());
				//versionVo.setUrl(newFile.getPath());
			} catch (IOException e) {
				logger.error("上传文件异常...",e);
			}
		}
	}
	/**
	 * @Description: 修改活动广告宣传表
	 * @param activityAdvert 活动广告宣传表
	 * @return 受影响行数
	 * @author yanglei
	 * @date 2017年12月06日 上午09:46:40
	 */
	public int updateActivityAdvert(ActivityAdvertVo versionVo) {
		//上传文件
		uploadFile(versionVo);
		ActivityAdvert entity=new ActivityAdvert();
		BeanUtils.copyProperties(versionVo, entity);
		entity.setImageUrlOriginal(versionVo.getImageUrlOriginal());
		entity.setUpdateTime(new Date());
		return activityAdvertService.updateById(entity);
	}
	
	/**
	 * @Description: 删除活动广告宣传表
	 * @param id 主键
	 * @return 受影响行数
	 * @author yanglei
	 * @date 2017年12月06日 上午09:46:40
	 */
	public int deleteActivityAdvert(Long id) {
		return activityAdvertService.deleteById(id);
	}
	
	/**
	 * @Description: 根据ID查询活动广告宣传表
	 * @param id 主键
	 * @return 活动广告宣传表
	 * @author yanglei
	 * @date 2017年12月06日 上午09:46:40
	 */
	@Override
	public ActivityAdvert findById(Long id) {
		return activityAdvertService.findById(id);
	}
	
	/**
	 * @Description: 分页查询活动广告宣传表
	 * @param activityAdvertVo 活动广告宣传表
	 * @param page 分页参数
	 * @return 活动广告宣传表
	 * @author yanglei
	 * @date 2017年12月06日 上午09:46:40
	 */
	public Pagination<ActivityAdvert> findByPagination(ActivityAdvertVo activityAdvertVo, Page page) {
		Pagination<ActivityAdvert> pagination = activityAdvertService.findByPagination(activityAdvertVo, page);
		return pagination;
	}

}