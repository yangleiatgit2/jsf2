package cn.uce.suc.bkg.service.datamain;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.entity.datamain.CarManage;
import cn.uce.suc.bkg.entity.datamain.CarManager;
import cn.uce.suc.bkg.vo.datamain.CarManageVo;
import cn.uce.suc.bkg.dao.datamain.ICarManageDao;

/**
 * @Description: 车辆信息表Service类
 * @author UCE-CodeGenerator
 * @date 2017年10月25日 下午05:08:33
 */
@Service("carManageService")
public class CarManageService {
	
	/**
	 * 注入车辆信息表Dao
	 */
	@Resource
	private ICarManageDao carManageDao;
	
	/**
	 * @Description: 新增车辆信息表
	 * @param carManage 车辆信息表
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	public int addCarManage(CarManage carManage) {
		return carManageDao.insert(carManage);
	}
	
	/**
	 * @Description: 修改车辆信息表
	 * @param carManage 车辆信息表
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	public int updateById(CarManage carManage) {
		return carManageDao.updateById(carManage);
	}
	
	/**
	 * @Description: 删除车辆信息表
	 * @param id 主键
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	public int deleteById(Long id) {
		return carManageDao.deleteById(id);
	}
	
	/**
	 * @Description: 根据ID查询车辆信息表
	 * @param id 主键
	 * @return 车辆信息表
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	public CarManage findById(Long id) {
		return carManageDao.findById(id);
	}
	
	/**
	 * @Description: 分页查询车辆信息表
	 * @param carManageVo 车辆信息表
	 * @param page 分页参数
	 * @return 车辆信息表
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	public Pagination<CarManage> findByPagination(CarManageVo carManageVo, Page page) {
		Pagination<CarManage> paginationCarManage = carManageDao.findByPagination(carManageVo, page);
		return paginationCarManage;
	}
	/**
	 * 
	 * @Description: 根据条件查询车辆信息
	 * @param carManageVo
	 * @param page
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月25日 下午6:20:27
	 */
	public Pagination<CarManage> findByCondition(CarManageVo carManageVo, Page page){
		Pagination<CarManage> pagination = carManageDao.findByCondition(carManageVo, page);
		return pagination;
	}
	/**
	 * 
	 * @Description: 不分页查询,导出
	 * @param carManageVo
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月25日 下午10:20:52
	 */
	public List<CarManageVo> findByExport(CarManageVo carManageVo){
		List<CarManageVo> cars = carManageDao.findByExport(carManageVo);
		return cars;
	}
	/**
	 * 
	 * @Description: 查询一个月到期和已经到期车辆
	 * @param carManageVo
	 * @param page
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月25日 下午9:49:41
	 */
	public Pagination<CarManage> findByInsurance(CarManageVo carManageVo, Page page){
		Pagination<CarManage> pagination = carManageDao.findByInsurance(carManageVo, page);
		return pagination;
	}
	/**
	 * 
	 * @Description: 查询所有车辆信息 
	 * @return
	 * @author zhandesheng
	 * @date 2017年10月27日 下午12:39:46
	 */
	public List<CarManager> findCarManage() {
		return carManageDao.findCarManage();
	}
	/**
	 * 
	 * @Description: 车辆下拉查询
	 * @param carManageVo
	 * @param page
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月30日 下午5:16:51
	 */
	public Pagination<CarManage> findCarByCmbgd(CarManageVo carManageVo, Page page){
		Pagination<CarManage> pagination = carManageDao.findCarByCmbgd(carManageVo, page);
		return pagination;
	}
	/**
	 * 
	 * @Description: 模糊查询最大车辆编号
	 * @param carNumber
	 * @return
	 * @author zhangqiang
	 * @date 2017年11月7日 上午11:06:46
	 */
	public synchronized String findMaxCarNumber(String carNumber){
		String maxCarNumber = carManageDao.findMaxCarNumber(carNumber);
		return maxCarNumber;
	}
	/**
	 * @Description: 根据编号和司机等查询车辆
	 * @param carManageVo
	 * @return CarManageVo
	 * @author yanglei
	 * @date 2017年11月19日 下午05:05:42
	 */
	public List<CarManageVo> findByVo(CarManageVo carManageVo){
		return carManageDao.findByVo(carManageVo);
	}
	/**
	 * 
	 * @Description: 查询在某时间段某种类型的可用车辆
	 * @param carManageVo
	 * @return
	 * @author yanglei
	 * @date 2017年11月7日 上午11:06:46
	 */
	public int findUsableCarByVo(CarManageVo carManageVo){
		return carManageDao.findUsableCarByVo(carManageVo);
	}
	
	/**
	 * @Description: 根据车牌号检测是否存在
	 * @param plateNumber
	 * @return
	 * @author xiesonglin
	 * @date 2017年12月26日 下午5:39:29
	 */
	public CarManageVo checkeExistsByPlateNumber(CarManageVo carManageVo){
		return this.carManageDao.checkExistsByPlateNumber(carManageVo);
	}
}