package cn.uce.suc.bkg.control.datamain;

import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.biz.datamain.IDeliveryRelationBiz;
import cn.uce.suc.bkg.entity.datamain.DeliveryRelation;
import cn.uce.suc.bkg.vo.datamain.DeliveryRelationVo;
import cn.uce.suc.common.constants.SucConstants;
import cn.uce.suc.common.util.DataConversionUtil;
import cn.uce.suc.common.vo.SucCurrentUser;
import cn.uce.web.common.base.BaseController;
import cn.uce.web.common.i18n.Resources;
import cn.uce.web.common.util.ObjectConvertUtil;
import cn.uce.web.common.util.WebUtil;

@Controller
@RequestMapping("/deliveryRelation")
public class DeliveryRelationController extends BaseController {

	/**
	 * 注入biz对象
	 */
	@Resource
	private IDeliveryRelationBiz deliveryRelationBiz;

	/**
	 * 
	 * @Description: 页面入口
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月28日 下午1:59:55
	 */
	@RequestMapping(value = "/forward")
	public String forward() {
		return "bkg/deliveryRelation";
	}

	/**
	 * 
	 * @Description: 分页查询所有数据
	 * @param deliveryRelationVo
	 * @param page
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月28日 下午2:00:58
	 */
	@RequestMapping(value = "/findAll")
	@ResponseBody
	public Map<String, Object> findByPagination(DeliveryRelationVo deliveryRelationVo, Page page) {
		Pagination<DeliveryRelation> pagination = deliveryRelationBiz.findByPagination(deliveryRelationVo, page);
		return returnSuccess(pagination);
	}

	/**
	 * 
	 * @Description: 新增交货关系
	 * @param deliveryRelation
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月28日 下午2:04:30
	 */
	@RequestMapping(value = "/addDeliveryRelation")
	@ResponseBody
	public Map<String, Object> addDeliveryRelation(DeliveryRelation deliveryRelation) {
		SucCurrentUser currentUser = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		deliveryRelation.setCreateEmp(currentUser.getEmpName());
		deliveryRelation.setVersion(SucConstants.ONE);
		deliveryRelation.setCreateTime(new Date());
		int result = deliveryRelationBiz.addDeliveryRelation(deliveryRelation);
		return result > 0 ? returnSuccess(Resources.getMessage("common.save.success")) : returnError(Resources
				.getMessage("common.save.fail"));
	}

	/**
	 * 
	 * @Description: 更新交货关系
	 * @param deliveryRelation
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月28日 下午2:08:30
	 */
	@RequestMapping(value = "/updateDeliveryRelation")
	@ResponseBody
	public Map<String, Object> updateDeliveryRelation(DeliveryRelationVo deliveryRelationVo) {
		SucCurrentUser currentUser = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		DeliveryRelation deliveryRelation = ObjectConvertUtil.convertObject(deliveryRelationVo, DeliveryRelation.class);
		deliveryRelation.setUpdateEmp(currentUser.getEmpName());
		deliveryRelation.setVersion(deliveryRelation.getVersion() + 1);
		deliveryRelation.setUpdateTime(new Date());
		int result = deliveryRelationBiz.updateDeliveryRelation(deliveryRelation);
		return result > 0 ? returnSuccess(Resources.getMessage("common.update.success")) : returnSuccess(Resources
				.getMessage("common.update.fail"));
	}

	/**
	 * 
	 * @Description: 删除交货关系
	 * @param id
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月2日 上午10:27:57
	 */
	@RequestMapping(value = "/deleteDeliveryRelation")
	@ResponseBody
	public Map<String, Object> deleteDeliveryRelation(Long id) {
		int result = deliveryRelationBiz.deleteDeliveryRelation(id);
		return result > 0 ? returnSuccess(Resources.getMessage("common.delete.success")) : returnError(Resources
				.getMessage("common.delete.fail"));
	}

	/**
	 * 
	 * @Description: 批量删除
	 * @param ids
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月28日 下午2:13:15
	 */
	@RequestMapping(value = "/deleteBatch")
	@ResponseBody
	public Map<String, Object> deleteBatch(String ids) {
		int result = deliveryRelationBiz.deleteBatch(ids);
		return result > 0 ? returnSuccess(Resources.getMessage("common.delete.success")) : returnError(Resources
				.getMessage("common.delete.fail"));
	}
}
