package cn.uce.suc.bkg.dao.operation;

import java.util.List;

import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.core.db.IBaseDao;
import cn.uce.suc.bkg.entity.operation.FreightOrderCombine;
import cn.uce.suc.bkg.vo.operation.FreightOrderCombineVo;

/**
 * @Description: 订单组合信息DAO接口类
 * @author liwei
 * @date 2017年10月21日 下午05:28:57
 */
@Repository("freightOrderCombineDao")
public interface IFreightOrderCombineDao extends IBaseDao<FreightOrderCombine, Long> {
	
	/**
	 * @Description: 分页查询订单组合信息
	 * @param freightOrderCombineVo 订单组合信息
	 * @param page 分页参数
	 * @return 订单组合信息
	 * @author liwei
	 * @date 2017年10月21日 下午05:28:57
	 */
	public Pagination<FreightOrderCombine> findByPagination(FreightOrderCombineVo freightOrderCombineVo, Page page);
	
	/**
	 * 
	 * @Description: 根据条件查询订单组合详情
	 * @param freightOrderCombineVo
	 * @return
	 * @author laizhendong
	 * @date 2017年11月4日 下午10:15:45
	 */
	public List<FreightOrderCombineVo> findByCondition(FreightOrderCombineVo freightOrderCombineVo);
	/**
	 * 
	 * @Description: 根据条件查询订单组合详情
	 * @param freightOrderCombineVo
	 * @return
	 * @author yanglei
	 * @date 2017年11月14日 下午10:15:45
	 */
	public List<FreightOrderCombineVo> findByConditionMultiCombineType(FreightOrderCombineVo freightOrderCombineVo, Page page);
	/**
	 * 
	 * @Description: 根据条件查询订单组合详情
	 * @param freightOrderCombineVo
	 * @return
	 * @author yanglei
	 * @date 2017年11月14日 下午10:15:45
	 */
	public List<FreightOrderCombineVo> findListByMultiCombineType(FreightOrderCombineVo freightOrderCombineVo);
	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用) 
	 * @param freightOrderCombineVo
	 * @return
	 * @author liwei
	 * @date 2017年11月6日 上午9:38:19
	 */
	public int updateByOrderCombine(FreightOrderCombineVo freightOrderCombineVo);
	
	/**
	 * 
	 * @Description: 根据组合编号更新订单组合状态 
	 * @param freightOrderCombineVo
	 * @return
	 * @author laizhendong
	 * @date 2017年11月8日 下午2:17:58
	 */
	public int updStatusByCombineCode(FreightOrderCombineVo freightOrderCombineVo);
	/**
	 * 
	 * @Description: T根据订单组合号查询
	 * @param orderCombineCode
	 * @return
	 * @author liwei
	 * @date 2017年11月12日 上午11:24:52
	 */
	public FreightOrderCombineVo findByOrderCombineCode(String orderCombineCode);
	/**
	 * @Description: 根据分拨编号和业务类型，业务模式等查询订单组合的数量
	 * @param demandSiteCode  
	 * @param  orderCombineType
	 * @param  businessMode
	 * @return count
	 * @author yanglei
	 * @date 2017年11月19日 下午03:24:55
	 */
	public int getOrderCombineVoCount(FreightOrderCombineVo freightOrderCombineVo);
	/**
	 * 
	 * @Description: 根据条件查询订单组合列表
	 * @param freightOrderCombineVo
	 * @return
	 * @author yanglei
	 * @date 2017年11月14日 下午10:15:45
	 */
	public List<FreightOrderCombineVo> findByOrderCombineMultiCombineType(@Param ("orderCombineTypes")String[] orderCombineTypes, @Param ("orderCombineStatuses")String[] orderCombineStatuses,@Param ("operStationCode") String operStationCode,@Param ("businessMode") String businessMode,@Param ("orderCombineCode") String orderCombineCode, Page page);
	
}