package cn.uce.suc.bkg.control.operation;

import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.biz.operation.IFreightDemandBiz;
import cn.uce.suc.bkg.biz.operation.IFreightDemandCombineBiz;
import cn.uce.suc.bkg.vo.operation.FreightDemandCombineVo;
import cn.uce.suc.bkg.vo.operation.FreightDemandVo;
import cn.uce.suc.bkg.vo.price.PricingRuleVo;
import cn.uce.suc.common.util.DataConversionUtil;
import cn.uce.suc.common.vo.SucCurrentUser;
import cn.uce.web.common.base.BaseController;
import cn.uce.web.common.i18n.Resources;
import cn.uce.web.common.util.WebUtil;

import com.alibaba.fastjson.JSONArray;

/**
 * 
 * @Description: 订单组合管理
 * @author liwei
 * @date 2017年10月20日 上午11:22:31
 */
@Controller
@RequestMapping("/freightDemandCombine")
public class FreightDemandCombineController extends BaseController {
	/**
	 *货运需求biz
	 */
	@Resource
	private IFreightDemandBiz freightDemandBiz;
	/**
	 * 货运需求组合biz
	 */
	@Resource
	private IFreightDemandCombineBiz freightDemandCombineBiz;
	/**
	 * 
	 * @Description: TODO页面跳转
	 * @param request
	 * @param response
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月23日 下午4:42:02
	 */
	@RequestMapping(value = "/forward")
	public String get(HttpServletRequest request, HttpServletResponse response) {
		return "bkg/freightDemandCombine";
	}
	/**
	 * 
	 * @Description: 组合查询分页
	 * @param freightOrderVo
	 * @param page
	 * @return
	 * @author liwei
	 * @date 2017年10月20日 下午1:50:59
	 */
	@RequestMapping(value  = "/findByPagination")
	@ResponseBody
	public Map<String, Object> findByPagination(FreightDemandCombineVo freightDemandCombineVo, Page page) {
		Pagination<FreightDemandCombineVo> pagination = freightDemandCombineBiz.findByPagination(freightDemandCombineVo, page);
		return returnSuccess(pagination);
	}
	/**
	 * 
	 * @Description: 新增货运需求组合
	 * @param freightDemandCombineVo
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月23日 下午4:45:03
	 */
	@RequestMapping(value  = "/addFreightDemandCombine")
	@ResponseBody
	public int addFreightDemandCombine(FreightDemandCombineVo freightDemandCombineVo) {
		return freightDemandCombineBiz.addFreightDemandCombine(freightDemandCombineVo);
	}
	
	/**
	 * 
	 * @Description: 根据需求组合id查询需求详情
	 * @param page
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月24日 下午3:11:00
	 */
	@RequestMapping(value = "/findByDemandDetail")
	@ResponseBody
	public List<FreightDemandVo>findByDemandDetail(String demandCombineCode,String demandCombineType, Page page) {
		FreightDemandVo freightDemandVo = new FreightDemandVo();
		freightDemandVo.setDemandCombineCode(demandCombineCode);
		freightDemandVo.setDemandType(demandCombineType);
		//Pagination<FreightDemandVo> pagination = freightDemandBiz.findByPagination(freightDemandVo, page);
		List<FreightDemandVo> findByCondition = freightDemandBiz.findByCondition(freightDemandVo);
		//return returnSuccess(findByCondition);
		return findByCondition;
	}
	/**
	 * 
	 * @Description:修改货运需求组合
	 * @param freightDemandCombineVo
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月23日 下午4:45:39
	 */
	@RequestMapping(value  = "/updateFreightDemandCombine")
	@ResponseBody
	public Map<String, Object>updateFreightDemandCombine(FreightDemandCombineVo freightDemandCombineVo) {
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		freightDemandCombineVo.setUpdateEmp(userInfo.getEmpName());
		freightDemandCombineVo.setUpdateOrg(userInfo.getCmsOrgName());
		freightDemandCombineVo.setUpdateTime(new Date());
		boolean res = freightDemandCombineBiz.updateFreightDemandCombine(freightDemandCombineVo);
		if (res) {
			return returnSuccess(Resources.getMessage("common.update.success"));
		}else{
			return returnError(Resources.getMessage("common.update.fail"));
		}
	}
	
	/**
	 * 
	 * @Description: 更新需求组合状态 同时更新相应需求的状态
	 * @param data
	 * @param demandStatus
	 * @param request
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月26日 下午6:09:15
	 */
	@RequestMapping(value = "updateCombineStatus")
	@ResponseBody
	public Map<String, Object> updateCombineStatus(String combineCodes, String demandCombineStatus, String demandStatus,HttpServletRequest request) {
		List<String> combinCodes=(List<String>)JSONArray.parseArray(combineCodes, String.class);
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		
		FreightDemandCombineVo fdc = new FreightDemandCombineVo();
		fdc.setDemandCombineStatus(demandCombineStatus);
		fdc.setUpdateEmp(userInfo.getEmpName());
		fdc.setUpdateOrg(userInfo.getCmsOrgName());
		fdc.setUpdateTime(new Date());
		
		FreightDemandVo fd = new FreightDemandVo();
		fd.setUpdateEmp(userInfo.getEmpName());
		fd.setUpdateOrg(userInfo.getCmsOrgName());
		fd.setUpdateTime(new Date());
		fd.setDemandStatus(demandStatus);
		String res = freightDemandCombineBiz.batchUpdateCombineStatus( combinCodes,fdc,fd);
		return res.indexOf(Resources.getMessage("success")) > -1 ? returnSuccess(res) : returnError(res);
	}
	
	/**
	 * 
	 * @Description: 根据选择的 定价规则编码  生成定价
	 * @param data
	 * @param demandStatus
	 * @param request
	 * @return
	 * @author lixueyuan
	 * @date 2017年11月1日 下午9:27:16
	 */
	@RequestMapping(value = "generateQuotation")
	@ResponseBody
	public Map<String, Object> generateQuotation(PricingRuleVo vo) {
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		vo.setUpdateEmp(userInfo.getEmpName());
		vo.setUpdateOrg(userInfo.getCmsOrgName());
		vo.setUpdateTime(new Date());
		String res = freightDemandCombineBiz.generateQuotation(vo);
		return res.indexOf(Resources.getMessage("success")) > -1 ? returnSuccess(res) : returnError(res);
	}
	
	/**
	 * 
	 * @Description: 发送报价 网点审核
	 * @param data
	 * @param demandStatus
	 * @param request
	 * @return
	 * @author lixueyuan
	 * @date 2017年11月1日 下午9:27:16
	 */
	@RequestMapping(value = "sendQuotation")
	@ResponseBody
	public Map<String, Object> sendQuotation(String combineCodes, HttpServletRequest request) {
		List<String> combinCodes=(List<String>)JSONArray.parseArray(combineCodes, String.class);
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		FreightDemandCombineVo fdc = new FreightDemandCombineVo();
		fdc.setUpdateEmp(userInfo.getEmpName());
		fdc.setUpdateOrg(userInfo.getCmsOrgName());
		fdc.setUpdateTime(new Date());
		String res = freightDemandCombineBiz.sendQuotation( fdc,combinCodes);
		return res.indexOf(Resources.getMessage("success")) > -1 ? returnSuccess(res) : returnError(res);
	}
	
}
