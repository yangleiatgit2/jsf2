package cn.uce.suc.bkg.cache;

import java.util.List;

import com.alibaba.fastjson.JSON;

import cn.uce.base.exception.BusinessException;
import cn.uce.core.cache.CacheManager;
import cn.uce.core.cache.base.ICache;
import cn.uce.suc.bkg.entity.datamain.OperationTime;
import cn.uce.utils.StringUtil;
/**
 * 
 * @Description: 分拨时刻缓存处理器
 * @author zhangqiang
 * @date 2017年11月6日 上午11:22:12
 */
public class IAOperaTimeCacheProcessor {
	
	
	
	/**
	 * 
	 * @Description: 刷新缓存
	 * @author laizhendong
	 * @date 2017年11月6日 上午7:51:11
	 */
	public static void refresh(String operationCenterCode) throws BusinessException {
		if (StringUtil.isNotBlank(operationCenterCode)) {
			ICache<String, String> operaTimeCache = CacheManager.getInstance().getCache("IAOperaTimeCache");
			//根据中心刷新缓存
			if(operaTimeCache != null){
				operaTimeCache.refresh(operationCenterCode);
			}
		}
	}
	
	/**
	 * 
	 * @Description: 根据key判断分拨中心时刻缓存是否存在 
	 * @param key
	 * @return
	 * @author laizhendong
	 * @date 2017年12月6日 下午4:21:19
	 */
	public static boolean isExist(String key){
		//获取缓存对象
		ICache<String,String> cache = CacheManager.getInstance().getCache("IAOperaTimeCache");
		if (cache != null) {
			String cacheJson = cache.get(key);
			if (StringUtil.isNotBlank(cacheJson)) {
				//释放
				cacheJson = null;
				return true;
			}
		}
		return false;
	}
}
