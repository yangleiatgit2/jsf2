package cn.uce.suc.app.util;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;

import cn.uce.utils.StringUtil;
/**
 * 
 * @Description: TODO(这里用一句话描述这个类的作用) 
 * @author liwei
 * @date 2017年11月3日 下午9:02:10
 */
public class PhoneFormatCheckUtils {
	/** 
	* 大陆号码或香港号码均可 
	*/  
	public static boolean isPhoneLegal(String str)throws PatternSyntaxException {  
		return isChinaPhoneLegal(str) || isHKPhoneLegal(str);  
	}  
	  
	 /** 
	 * 大陆手机号码11位数，匹配格式：前三位固定格式+后8位任意数 
	 * 此方法中前三位格式有： 
	 * 13+任意数 
	 * 15+除4的任意数 
	 * 18+除1和4的任意数 
	 * 17+除9的任意数 
	 * 147 
	 */  
	 public static boolean isChinaPhoneLegal(String str) throws PatternSyntaxException {  
		 String regex = "^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(17[013678])|(18[0,5-9]))\\d{8}$";
		 
		 if(StringUtil.isBlank(str)|| str.length() !=11){
			 return false;
		 }
	     Pattern p = Pattern.compile(regex);  
	     Matcher m = p.matcher(str);  
	     return m.matches();  
	  }  
	  
	/** 
	 * 香港手机号码8位数，5|6|8|9开头+7位任意数 
	 */  
	 public static boolean isHKPhoneLegal(String str)throws PatternSyntaxException {  
	     String regExp = "^(5|6|8|9)\\d{7}$";
	     if(StringUtil.isBlank(str)|| str.length() !=8){
			 return false;
		 }
	     
	     Pattern p = Pattern.compile(regExp);  
	     Matcher m = p.matcher(str);  
	     return m.matches();  
	  }  
}
