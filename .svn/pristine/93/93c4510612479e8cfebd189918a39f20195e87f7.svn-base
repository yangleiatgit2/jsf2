package cn.uce.suc.common.biz;

import java.util.List;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.common.entity.TruckCostManagement;
import cn.uce.suc.common.vo.TruckCostManagementVo;

/**
 * @Description: 车型成本管理BIZ接口类
 * @author liwei
 * @date 2017年10月31日 下午01:36:11
 */
public interface ITruckCostManagementBiz {
	
	/**
	 * @Description: 新增车型成本管理
	 * @param truckCostManagement
	 * @return 受影响行数
	 * @author liwei
	 * @date 2017年10月31日 下午01:36:11
	 */
	public int addTruckCostManagement(TruckCostManagement truckCostManagement);
	
	/**
	 * @Description: 修改车型成本管理
	 * @param truckCostManagement 车型成本管理
	 * @return 受影响行数
	 * @author liwei
	 * @date 2017年10月31日 下午01:36:11
	 */
	public int updateTruckCostManagement(TruckCostManagement truckCostManagement);
	
	/**
	 * @Description: 删除车型成本管理
	 * @param id 主键
	 * @return 受影响行数
	 * @author liwei
	 * @date 2017年10月31日 下午01:36:11
	 */
	public int deleteTruckCostManagement(Long id);
	
	/**
	 * @Description: 根据ID查询车型成本管理
	 * @param id 主键
	 * @return 车型成本管理
	 * @author liwei
	 * @date 2017年10月31日 下午01:36:11
	 */
	public TruckCostManagement findById(Long id);
	
	/**
	 * @Description: 分页查询车型成本管理
	 * @param truckCostManagementVo 车型成本管理
	 * @param page 分页参数
	 * @return 车型成本管理
	 * @author liwei
	 * @date 2017年10月31日 下午01:36:11
	 */
	public Pagination<TruckCostManagement> findByPagination(TruckCostManagementVo truckCostManagementVo, Page page);
	/**
	 * 
	 * @Description:查询所有 当前 网点所属分拨的 临时需求的 车型成本
	 * @param truckCostManagementVo 车型成本管理
	 * @return
	 * @author lixueyuan
	 * @date 2017年11月6日 下午6:45:56
	 */
	public List<TruckCostManagementVo> findByBelongSiteCode(TruckCostManagementVo truckCostManagementVo);
	
	/**
	 * @Description: 查询该车型管理号的最大版本号
	 * @param truckManageCode 车型管理号
	 * @return 车型成本管理的max版本
	 * @author 
	 * @date 2017年10月31日 下午01:36:11
	 */
	public Long getMaxVersion(String truckManageCode);
	
	
	/**
	 * @Description: 把老版本的逻辑删除，新建立个新版本
	 * @param truckManageCode 车型管理号
	 * @return 更改的条数
	 * @author 
	 * @date 2017年10月31日 下午01:36:11
	 */
	public int addTruckAndDeleteOld(TruckCostManagement truckCostManagement);
	/**
	 * @Description: 批量审核
	 * @param ids  id的字符串
	 * @param detailsStatus   审核的状态
	 * @return 更改的条数
	 * @author 
	 * @date 2017年10月31日 下午01:36:11
	 */
	public int updateDetailsStatusByIds(String ids,String detailsStatus);
	
	/**
	 * 
	 * @Description: 获取一个新的车型管理号
	 * @param 
	 * @param truckManageCode 
	 * @return
	 * @author haizhou
	 * @date 2017年11月6日 下午3:11:00
	 */
	
	public String getTruckManageCode();
	
	
  /**
   * 
   * @Description: 根据条件查询车型成本 
   * @param truckCostManagementVo
   * @return
   * @author laizhendong
   * @date 2017年11月6日 上午11:10:36
   */
  public List<TruckCostManagementVo> findByCondition(TruckCostManagementVo truckCostManagementVo);
  /**
	 * 
	 * @Description: 车型版本号数据未作修改，版本升级
	 * @param ids  
	 * @return 修改的条数
	 * @author haizhou
	 * @date 2017年11月6日 下午3:11:00
	 */
  public int versionUpByIds(String ids ,String updateEmp);
  /**
	 * 
	 * @Description: 车型车本名称下拉
	 * @param carrierInfoVo
	 * @param page
	 * @return
	 * @author haizhou
	 * @date 2017年11月7日 下午5:57:39
	 */
  
  public Pagination<TruckCostManagement> getByTruckCostName(
		TruckCostManagementVo truckCostManagementVo, Page page);
	
}