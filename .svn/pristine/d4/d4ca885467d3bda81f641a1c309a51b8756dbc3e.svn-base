package cn.uce.suc.common.control;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FileUtils;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.common.biz.IVersionBiz;
import cn.uce.suc.common.dao.IVersionDao;
import cn.uce.suc.common.entity.Version;
import cn.uce.suc.common.util.DataConversionUtil;
import cn.uce.suc.common.vo.SucCurrentUser;
import cn.uce.suc.common.vo.VersionVo;
import cn.uce.web.common.base.BaseController;
import cn.uce.web.common.i18n.Resources;
import cn.uce.web.common.util.WebUtil;

/**
 * 
 * @Description: app版本管理
 * @author liwei
 * @date 2017年11月12日 上午9:17:07
 */
@Controller
@RequestMapping("/version")
public class VersionController extends BaseController {
	/**
	 * 注入
	 */
	@Resource
	private IVersionBiz versionBiz;
	@Resource
	private IVersionDao versionDao;
	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用) 
	 * @param request
	 * @param response
	 * @return
	 * @author liwei
	 * @date 2017年11月12日 下午9:06:38
	 */
	@RequestMapping("/forward")
	public String get(HttpServletRequest request, HttpServletResponse response) {
		return "common/appVersion";
	}
	/**
	 * @Description: 分页查询移动端软件更新记录
	 * @param versionVo 移动端软件更新记录
	 * @param page 分页参数
	 * @return 移动端软件更新记录
	 * @author liwei
	 * @date 2017年11月12日 上午09:15:11
	 */
	@RequestMapping("/findByPagination")
	@ResponseBody
	public Map<String,Object> findByPagination(VersionVo versionVo, Page page){
		return returnSuccess(versionBiz.findByPagination(versionVo, page));
	}
	/**
	 * @Description: 分页查询移动端软件更新记录
	 * @param versionVo 移动端软件更新记录
	 * @param page 分页参数
	 * @return 移动端软件更新记录
	 * @author yanglei
	 * @date 2017年11月12日 上午09:15:11
	 */
	@RequestMapping("/findListByVo")
	@ResponseBody
	public Map<String,Object> findListByVo(VersionVo versionVo){
//		Page page=new Page();
//		page.setCurrentPage(0);
//		page.setPageSize(15);
//		Pagination<Version> pagination=versionBiz.findByPagination(versionVo, page);
		List<Version> list=versionDao.findByListByVo(versionVo);
		return returnSuccess(list);
	}
	/**
	 * 
	 * @Description: 新增版本记录
	 * @param version
	 * @return
	 * @author liwei
	 * @date 2017年11月12日 下午9:38:45
	 */
	@RequestMapping("/addVersion")
	@ResponseBody
	public Map<String,Object> addVersion(VersionVo versionVo){
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		versionVo.setCreateEmp(userInfo.getEmpName());
		versionVo.setCreateOrg(userInfo.getCmsBaseOrgCode());
		versionVo.setCreateTime(new Date());
		versionVo.setDelFlag(false);
		int res = versionBiz.addVersion(versionVo);
		if (res > 0) {
			return returnSuccess(Resources.getMessage("common.save.success"));
		}else{
			return returnError(Resources.getMessage("common.save.fail"));
		}
	}
	
	/**
	 * 
	 * @Description: 新增版本记录
	 * @param version
	 * @return
	 * @author liwei
	 * @date 2017年11月12日 下午9:38:45
	 */
	@RequestMapping("/updateVersion")
	@ResponseBody
	public Map<String,Object> updateVersion(VersionVo versionVo){
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		versionVo.setUpdateEmp(userInfo.getEmpName());
		versionVo.setUpdateOrg(userInfo.getCmsBaseOrgCode());
		versionVo.setUpdateTime(new Date());
		int res=versionBiz.updateVersion(versionVo);
		if(res>0){
			return returnSuccess(Resources.getMessage("common.update.success"));
		}else{
			return returnError(Resources.getMessage("common.update.fail"));
		}
	}
	/**
	 * 
	 * @Description: 新增版本记录
	 * @param version
	 * @return
	 * @author liwei
	 * @date 2017年11月12日 下午9:38:45
	 */
	@RequestMapping("/deleteVersion")
	@ResponseBody
	public Map<String,Object> deleteVersion(Long  id){
		versionBiz.deleteVersion(id);
		return returnSuccess("common.delete.success");
	}
	
	/**
	 * 
	 * @Description: 下载公告附件
	 * @param filePath
	 * @param request
	 * @param response
	 * @return
	 * @author lixueyuan
	 * @throws IOException 
	 * @date 2017年8月30日 下午1:08:05
	 */
	@RequestMapping("downloadFile")
	@ResponseBody
	public ResponseEntity<byte[]> downloadFile(String filePath,HttpServletRequest request, HttpServletResponse response) throws IOException{
		String fileName = filePath.substring(filePath.lastIndexOf(File.separator)+1);
		filePath = filePath.substring(0,filePath.lastIndexOf(File.separator)+1);
		//创建文件,指定需要下载文件的路径
		File file = new File(filePath, fileName);
		HttpHeaders headers = new HttpHeaders();    
        byte[] readFileToByteArray;
       fileName=new String(fileName.getBytes("UTF-8"),"iso-8859-1");//为了解决中文名称乱码问题  
		headers.setContentDispositionFormData("attachment", fileName);   
		headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);   
		readFileToByteArray = FileUtils.readFileToByteArray(file);
		return new ResponseEntity<byte[]>(readFileToByteArray, headers, HttpStatus.CREATED);
	}
	
}
