package cn.uce.suc.app.cache;

import cn.uce.base.exception.BusinessException;
import cn.uce.core.cache.CacheSupport;
import cn.uce.core.cache.base.IKeyGenerator;
import cn.uce.core.cache.base.ResultMap;
import cn.uce.core.cache.storage.ICacheStorage;

/**
 * 
 * @Description: TODO(这里用一句话描述这个类的作用)
 * @author liwei
 * @date 2017年11月15日 下午1:48:06
 */
public class CaptchaCache extends CacheSupport<String> {
	/**
	 * <p>
	 * Title: 默认获取方法
	 * </p>
	 * <p>
	 * Description:
	 * </p>
	 * 
	 * @param k
	 * @return
	 * @throws BusinessException
	 * @see cn.uce.core.cache.base.CacheCallBack#doGet(java.lang.Object)
	 */
	@Override
	public String doGet(String k) throws BusinessException {
		return null;
	}

	/**
	 * 获取缓存id
	 * <p>
	 * Title: getCacheId
	 * </p>
	 * <p>
	 * Description:
	 * </p>
	 * 
	 * @return
	 * @see cn.uce.core.cache.base.ICache#getCacheId()
	 */
	@Override
	public String getCacheId() {
		return this.getClass().getSimpleName();
	}

	/**
	 * (非 Javadoc)
	 * <p>
	 * Title: getStorage
	 * </p>
	 * <p>
	 * Description:
	 * </p>
	 * 
	 * @return
	 * @see cn.uce.core.cache.CacheSupport#getStorage()
	 */
	@Override
	protected ICacheStorage<String, String> getStorage() {
		return super.getStorage();
	}

	/**
	 * (非 Javadoc)
	 * <p>
	 * Title: doInitialization
	 * </p>
	 * <p>
	 * Description:
	 * </p>
	 * 
	 * @param generator
	 * @return
	 * @throws BusinessException
	 * @see cn.uce.core.cache.CacheSupport#doInitialization(cn.uce.core.cache.base.IKeyGenerator)
	 */
	@Override
	public ResultMap<String, String> doInitialization(IKeyGenerator<String> generator) throws BusinessException {
		return super.doInitialization(generator);
	}
	
	/**
	 * 
	 * @Description:认证写入验证码
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public Boolean authset(String phone, String usertype, String cacha, int timeOut) {
		String key = generate(generateAuth(phone, usertype));
		return this.getStorage().set(key, cacha, timeOut * 1000);

	}
	/**
	 * 
	 * @Description:删除用户认证
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public void removeauth(String phone, String usertype) {
		String key = generate(generateAuth(phone, usertype));
		this.getStorage().remove(key);

	}
	/**
	 * 
	 * @Description:获取用户认证验证码
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public String getauth(String phone, String userType) {
		String key = generateAuth(phone, userType);
		return this.get(key);
	}
	/**
	 * 
	 * @Description: 用户认证写入验证码
	 * @param phone
	 * @param usertype
	 * @param cacha
	 * @param timeout
	 * @return
	 * @author liwei
	 * @date 2017年11月30日 下午7:46:28
	 */
	public Boolean registset(String phone, String usertype, String cacha) {
		String key = generate(generateRegist(phone, usertype));
		int timeout = getTimeOut();
		if (timeout > 0) {
			return this.getStorage().set(key, cacha, getTimeOut());
		} else {
			return this.getStorage().set(key, cacha);
		}
	}

	/**
	 * 
	 * @Description:更新密码 写入缓存
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public Boolean updateset(String phone, String usertype, String cacha) {
		String key = generate(generateupdate(phone, usertype));
		int timeout = getTimeOut();
		if (timeout > 0) {
			return this.getStorage().set(key, cacha, getTimeOut());
		} else {
			return this.getStorage().set(key, cacha);
		}
	}

	/**
	 * 
	 * @Description:删除对应注册用户的key
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public void removeRegist(String phone, String usertype) {
		String key = generate(generateRegist(phone, usertype));
		this.getStorage().remove(key);

	}

	/**
	 * 
	 * @Description:删除更新密码对应的key
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public void removeupdate(String phone, String usertype) {
		String key = generate(generateupdate(phone, usertype));
		this.getStorage().remove(key);

	}

	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用)
	 * @param phone
	 * @param cacha
	 * @return
	 * @author liwei
	 * @date 2017年11月15日 下午2:22:32
	 */
	private String generateupdate(String phone, String cacha) {
		StringBuffer stringBuffer = new StringBuffer("update");
		stringBuffer.append(phone);
		stringBuffer.append(cacha);
		return stringBuffer.toString();
	}
	/**
	 * 
	 * @Description:认证验证码key
	 * @param phone
	 * @param cacha
	 * @return
	 * @author liwei
	 * @date 2017年11月15日 下午2:22:32
	 */
	private String generateAuth(String phone, String userType) {
		StringBuffer stringBuffer = new StringBuffer("auth");
		stringBuffer.append(phone);
		stringBuffer.append(userType);
		return stringBuffer.toString();
	}
	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用)
	 * @param phone
	 * @param cacha
	 * @return
	 * @author liwei
	 * @date 2017年11月15日 下午2:22:32
	 */
	private String generateRegist(String phone, String userType) {
		StringBuffer stringBuffer = new StringBuffer("regist");
		stringBuffer.append(phone);
		stringBuffer.append(userType);
		return stringBuffer.toString();
	}

	/**
	 * 
	 * @Description:注册写入验证码
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public String getRegist(String phone, String userType) {
		String key = generateRegist(phone, userType);
		return this.get(key);
	}

	/**
	 * 
	 * @Description:注册写入验证码
	 * @param key
	 * @param token
	 * @return
	 * @author lbnwxly
	 * @date 2017年10月10日 下午10:12:05
	 */
	public String getupdate(String phone, String userType) {
		String key = generateupdate(phone, userType);
		return this.get(key);
	}
}
