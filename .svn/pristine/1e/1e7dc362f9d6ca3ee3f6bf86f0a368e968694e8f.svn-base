package cn.uce.suc.bkg.cache;

import cn.uce.base.exception.BusinessException;
import cn.uce.core.cache.CacheManager;
import cn.uce.core.cache.base.ICache;
import cn.uce.utils.StringUtil;

/**
 * @Description: 算法参数缓存处理器 
 * @author laizhendong
 * @date 2017年4月15日 上午11:05:48
 */
public class IAConfCacheProcessor {
	
	
	/**
	 * 
	 * @Description: 根据key判断算法参数缓存是否存在
	 * @param key
	 * @return
	 * @author laizhendong
	 * @date 2017年12月6日 下午4:00:06
	 */
	public static boolean isExist(String key){
		ICache<String,String> iaConfCache = CacheManager.getInstance().getCache("IAConfCache");
		String iaConfJson = iaConfCache.get(key);
		if (StringUtil.isNotBlank(iaConfJson)) {
			//释放
			iaConfJson = null;
			return true;
		}
		return false;
	}
	
	/**
	 * 
	 * @Description: 刷新缓存
	 * @author laizhendong
	 * @date 2017年11月6日 上午7:51:11
	 */
	public static void refresh(String key) throws BusinessException {
		ICache<String, String> iaConfCache = CacheManager.getInstance().getCache("IAConfCache");
		if(iaConfCache != null){
			iaConfCache.refresh(key);
		}
	}
	
	
	

}
