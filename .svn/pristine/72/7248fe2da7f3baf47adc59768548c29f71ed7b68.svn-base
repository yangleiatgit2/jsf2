package cn.uce.suc.bkg.service.price;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.entity.price.PricingRuleTypeDetail;
import cn.uce.suc.bkg.vo.price.PricingRuleTypeDetailVo;
import cn.uce.suc.bkg.dao.price.IPricingRuleTypeDetailDao;

/**
 * @Description: 定价分类管理明细Service类
 * @author UCE-CodeGenerator
 * @date 2017年10月31日 下午05:30:43
 */
@Service("pricingRuleTypeDetailService")
public class PricingRuleTypeDetailService {

	/**
	 * 注入定价分类管理明细Dao
	 */
	@Resource
	private IPricingRuleTypeDetailDao pricingRuleTypeDetailDao;

	/**
	 * @Description: 新增定价分类管理明细
	 * @param pricingRuleTypeDetail
	 *            定价分类管理明细
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月31日 下午05:30:43
	 */
	public int addPricingRuleTypeDetail(PricingRuleTypeDetail pricingRuleTypeDetail) {
		return pricingRuleTypeDetailDao.insert(pricingRuleTypeDetail);
	}

	/**
	 * @Description: 修改定价分类管理明细
	 * @param pricingRuleTypeDetail
	 *            定价分类管理明细
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月31日 下午05:30:43
	 */
	public int updateById(PricingRuleTypeDetail pricingRuleTypeDetail) {
		return pricingRuleTypeDetailDao.updateById(pricingRuleTypeDetail);
	}

	/**
	 * @Description: 删除定价分类管理明细
	 * @param id
	 *            主键
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月31日 下午05:30:43
	 */
	public int deleteById(Long id) {
		return pricingRuleTypeDetailDao.deleteById(id);
	}

	/**
	 * 
	 * @Description: 根据定价规则编码删除明细 
	 * @param ruleCode
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月6日 下午5:30:01
	 */
	public int deleteByRuleCode(String ruleCode){
		return pricingRuleTypeDetailDao.deleteByRuleCode(ruleCode);
	}
	
	/**
	 * @Description: 根据ID查询定价分类管理明细
	 * @param id
	 *            主键
	 * @return 定价分类管理明细
	 * @author UCE-CodeGenerator
	 * @date 2017年10月31日 下午05:30:43
	 */
	public PricingRuleTypeDetail findById(Long id) {
		return pricingRuleTypeDetailDao.findById(id);
	}

	/**
	 * @Description: 分页查询定价分类管理明细
	 * @param pricingRuleTypeDetailVo
	 *            定价分类管理明细
	 * @param page
	 *            分页参数
	 * @return 定价分类管理明细
	 * @author UCE-CodeGenerator
	 * @date 2017年10月31日 下午05:30:43
	 */
	public Pagination<PricingRuleTypeDetail> findByPagination(PricingRuleTypeDetailVo pricingRuleTypeDetailVo, Page page) {
		Pagination<PricingRuleTypeDetail> paginationPricingRuleTypeDetail = pricingRuleTypeDetailDao.findByPagination(
				pricingRuleTypeDetailVo, page);
		return paginationPricingRuleTypeDetail;
	}

	/**
	 * 
	 * @Description: 根据定价规则编码获取组装明细信息
	 * @param ruleCode
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月6日 下午6:38:49
	 */
	public List<PricingRuleTypeDetailVo> getGroupByCondition(PricingRuleTypeDetailVo pricingRuleTypeDetailVo) {
		return pricingRuleTypeDetailDao.getGroupByCondition(pricingRuleTypeDetailVo);
	}

	/**
	 * 
	 * @Description: 根据定价规则编码获取数据 
	 * @param ruleTypeCode
	 * @return
	 * @author wangzhijun
	 * @date 2017年11月6日 下午10:12:15
	 */
	public List<PricingRuleTypeDetail> findByRuleCode(PricingRuleTypeDetailVo pricingRuleTypeDetailVo) {
		return pricingRuleTypeDetailDao.findByRuleCode(pricingRuleTypeDetailVo);
	}
}