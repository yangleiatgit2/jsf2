package cn.uce.suc.bkg.biz.impl.price;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.biz.price.IPricingRuleDetailRelBiz;
import cn.uce.suc.bkg.entity.price.PricingRuleDetailRel;
import cn.uce.suc.bkg.vo.price.PricingRuleDetailRelVo;
import cn.uce.suc.bkg.service.price.PricingRuleDetailRelService;

/**
 * @Description: 定价规则详情与网点关系表BIZ实现类
 * @author laizhendong
 * @date 2017年11月05日 下午01:41:44
 */
@Service("pricingRuleDetailRelBiz")
@Transactional(readOnly = true, propagation = Propagation.SUPPORTS)
public class PricingRuleDetailRelBiz implements IPricingRuleDetailRelBiz {
	
	/**
	 * 注入定价规则详情与网点关系表Service
	 */
	@Resource
	private PricingRuleDetailRelService pricingRuleDetailRelService;
	
	/**
	 * @Description: 新增定价规则详情与网点关系表
	 * @param pricingRuleDetailRel
	 * @return 受影响行数
	 * @author laizhendong
	 * @date 2017年11月05日 下午01:41:44
	 */
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public int addPricingRuleDetailRel(PricingRuleDetailRel pricingRuleDetailRel) {
		return pricingRuleDetailRelService.addPricingRuleDetailRel(pricingRuleDetailRel);
	}
	
	/**
	 * @Description: 修改定价规则详情与网点关系表
	 * @param pricingRuleDetailRel 定价规则详情与网点关系表
	 * @return 受影响行数
	 * @author laizhendong
	 * @date 2017年11月05日 下午01:41:44
	 */
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public int updatePricingRuleDetailRel(PricingRuleDetailRel pricingRuleDetailRel) {
		return pricingRuleDetailRelService.updateById(pricingRuleDetailRel);
	}
	
	/**
	 * @Description: 删除定价规则详情与网点关系表
	 * @param id 主键
	 * @return 受影响行数
	 * @author laizhendong
	 * @date 2017年11月05日 下午01:41:44
	 */
	@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
	public int deletePricingRuleDetailRel(Long id) {
		return pricingRuleDetailRelService.deleteById(id);
	}
	
	/**
	 * @Description: 根据ID查询定价规则详情与网点关系表
	 * @param id 主键
	 * @return 定价规则详情与网点关系表
	 * @author laizhendong
	 * @date 2017年11月05日 下午01:41:44
	 */
	@Override
	public PricingRuleDetailRel findById(Long id) {
		return pricingRuleDetailRelService.findById(id);
	}
	
	/**
	 * @Description: 分页查询定价规则详情与网点关系表
	 * @param pricingRuleDetailRelVo 定价规则详情与网点关系表
	 * @param page 分页参数
	 * @return 定价规则详情与网点关系表
	 * @author laizhendong
	 * @date 2017年11月05日 下午01:41:44
	 */
	public Pagination<PricingRuleDetailRelVo> findByPagination(PricingRuleDetailRelVo pricingRuleDetailRelVo, Page page) {
		Pagination<PricingRuleDetailRelVo> pagination = pricingRuleDetailRelService.findByPagination(pricingRuleDetailRelVo, page);
		return pagination;
	}

}