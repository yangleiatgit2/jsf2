package cn.uce.suc.bkg.control.infomon;

import java.util.Calendar;
import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.common.biz.imp.NoticeDetailBiz;
import cn.uce.suc.common.constants.BkgConstants;
import cn.uce.suc.common.entity.NoticeDetail;
import cn.uce.suc.common.vo.AppNotice;
import cn.uce.suc.common.vo.NoticeDetailVo;
import cn.uce.web.common.base.BaseController;
import cn.uce.web.common.i18n.Resources;


@Controller
@RequestMapping("/newsDetail")
public class NewsDetailController extends BaseController {

	
	
	@Resource
	NoticeDetailBiz noticeDetailBiz;
	
	
	//页面跳转
		@RequestMapping(value = "/forward")
		public String get(HttpServletRequest request, HttpServletResponse response) {
			return "common/newsDetail";
		} 
		
		
		/**
		 * @Description: 消息详情条件分页查询
		 * @param NoticeDetailVo 消息的条件
		 * @return  NoticeDetail 条件查询出来的消息详情
		 * @author UCE-haizhou
		 * @date 2017年10月30日 下午13:37:13
		 */
		@RequestMapping(value = "/findByWhere")
		@ResponseBody
		public Map<String, Object> findByCondition(NoticeDetailVo noticeDetailVo, Page page) {
			//NoticeDetailVo.setDeleteFlag(false);
			//Pagination<NoticeVo> pagination = noticeBiz.findByPagination(noticeVo, page);
			if(noticeDetailVo.getUpdateTime()!=null){
				   
				   
		        Calendar c = Calendar.getInstance();  
		        c.setTime(noticeDetailVo.getUpdateTime());  
		        c.add(Calendar.DAY_OF_MONTH, 1);// 今天+1天  
		   
		        Date tomorrow = c.getTime();  
		        noticeDetailVo.setUpdateTime(tomorrow);
			}
			Pagination<NoticeDetail> pagination=noticeDetailBiz.findByPagination(noticeDetailVo, page);
			return returnSuccess(pagination);
		}
		/**
		 * @Description: 消息详情查询
		 * @param id 消息详情的ID
		 * @return  NoticeDetail 唯一ID查询出来的消息详情
		 * @author UCE-haizhou
		 * @date 2017年10月30日 下午13:37:13
		 */
		@RequestMapping(value = "/findOneByid")
		@ResponseBody
		public Map<String, Object> findOneByid(@RequestParam(value = "id", required = true) Long id) {
			NoticeDetail newsDetail = noticeDetailBiz.findById(id);
			return returnSuccess(newsDetail);
		}
		/**
		 * @Description: app首页任务栏展示
		 * @param user_phone
		 * @return Pagination<NoticeDetail> 首页任务栏需要展示的待办事项和重要消息
		 * @author UCE-haizhou
		 * @date 2017年10月30日 下午13:37:13
		 */
		
		@RequestMapping(value = "/findIndexPageByPhone")
		@ResponseBody
		public Map<String, Object> findIndexPageByPhone(String userPhone, Page page) {
			NoticeDetailVo noticeDetailVo = new NoticeDetailVo();
			noticeDetailVo.setUserPhone(userPhone);
			noticeDetailVo.setDisplayWays("1");
			// Pagination<NoticeDetail>
			// pagination=noticeDetailBiz.findIndexPageByPhone(userPhone,page);
			Pagination<NoticeDetail> pagination = noticeDetailBiz.findByPagination(noticeDetailVo, page);
			return returnSuccess(pagination);
	
		}
			/**
		 * @Description: app获取各个类型的消息
		 * @param noticeDetailVo
		 * @return Pagination<NoticeDetail> 首页任务栏需要展示的待办事项和重要消息
		 * @author UCE-haizhou
		 * @date 2017年10月30日 下午13:37:13
		 */
		@RequestMapping(value = "/findNewsByPhoneAndType")
		@ResponseBody
	public Map<String, Object> findNewsByPhoneAndType(String userPhone, String newsType, Page page) {
		NoticeDetailVo noticeDetailVo = new NoticeDetailVo();
		noticeDetailVo.setUserPhone(userPhone);
		noticeDetailVo.setNewsType(newsType);
		Pagination<NoticeDetail> pagination = noticeDetailBiz.findByPagination(noticeDetailVo, page);
		return returnSuccess(pagination);

	}
		/**
		 * @Description: PC首页获取消息
		 * @param 
		 * @return Pagination<NoticeDetail> pc端首页显示的消息
		 * @author UCE-haizhou
		 * @date 2017年10月30日 下午13:37:13
		 */	
		@RequestMapping(value = "/findPcIndex")
		@ResponseBody
		public Map<String, Object> findPcIndex(
				String  newsType,
				int pageSize ,
				int currentPage
				){
			NoticeDetailVo noticeDetailVo = new  NoticeDetailVo();
			noticeDetailVo.setNewsType(newsType);
			noticeDetailVo.setReadFlag(false);
			noticeDetailVo.setDeleteFlag(false);
			noticeDetailVo.setPlatform(BkgConstants.NEWS_PLATFORM_SCHEDULE);
			Page  page = new Page();
			page.setCurrentPage(currentPage);
			page.setPageSize(pageSize);
			Pagination<NoticeDetail> findByPagination = noticeDetailBiz.findPcIndex(noticeDetailVo, page);
			return returnSuccess(findByPagination);
		}
		/**
		 * @Description: 获取消息详情并且把消息设置为已读
		 * @param  id
		 * @return AppNotice 消息的详情
		 * @author UCE-haizhou
		 * @date 2017年10月30日 下午13:37:13
		 */	
		@RequestMapping(value = "/getNewsDetail")
		@ResponseBody
		public Map<String, Object> getNewsDetail(Long  id ){
			
			AppNotice newsDetailsById = noticeDetailBiz.getNewsDetailsById(id);
			if(newsDetailsById != null){
				return returnSuccess(newsDetailsById);
			}
			return returnError(Resources.getMessage("common.get.fail"));
		}
}
