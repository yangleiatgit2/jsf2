package cn.uce.suc.bkg.control.operation;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.biz.operation.IFreightDemandBiz;
import cn.uce.suc.bkg.vo.operation.FreightDemandVo;
import cn.uce.suc.common.constants.BkgConstants;
import cn.uce.suc.common.util.DataConversionUtil;
import cn.uce.suc.common.vo.SucCurrentUser;
import cn.uce.web.common.base.BaseController;
import cn.uce.web.common.i18n.Resources;
import cn.uce.web.common.util.WebUtil;

import com.alibaba.fastjson.JSONArray;
/**
 * 
 * @Description: 长期货运需求控制器
 * @author lixueyuan
 * @date 2017年10月18日 上午10:09:27
 */
@Controller
@RequestMapping("/freightDemand")
public class FreightDemandController extends BaseController{
	
	/**
	 * 注入IFreightDemandBiz对象
	 */
	@Resource
	private IFreightDemandBiz freightDemandBiz;
	private String ltflag="";
	private String stflag="";
	private int lttimer=0;	
	private int sttimer=0;	
	/**
	 * 
	 * @Description: 跳转到长期需求界面
	 * @param request
	 * @param response
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月31日 下午4:26:19
	 */
	@RequestMapping(value = "/ltforward")
	public String getlt(HttpServletRequest request, HttpServletResponse response) {
		ltflag=request.getParameter("ltrequiCombinCode");
		if(StringUtils.isBlank(ltflag)){
			lttimer=0;
		}
		return "bkg/longtermFreightDemand";
	}
	/**
	 * 
	 * @Description: 跳转到临时需求页面
	 * @param request
	 * @param response
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月31日 下午4:26:11
	 */
	@RequestMapping(value = "/stforward")
	public String getst(HttpServletRequest request, HttpServletResponse response) {
		stflag=request.getParameter("strequiCombinCode");
		if(StringUtils.isBlank(stflag)){
			sttimer=0;
		}
		return "bkg/shorttermFreightDemand";
	}
	/**
	 * 
	 * @Description: 分页查询需求
	 * @param freightDemandVo
	 * @param page
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月31日 下午4:25:42
	 */
	@RequestMapping(value = "/findByPagination")
	@ResponseBody
	public Map<String, Object> findByPagination(FreightDemandVo freightDemandVo, Page page) {
		if(!isFromPage(freightDemandVo)){
			if(StringUtils.isBlank(ltflag) && StringUtils.isBlank(stflag)){
				return new HashMap<String, Object>();
			}
			if(StringUtils.isNoneBlank(ltflag)){
				freightDemandVo.setDemandCombineCode(ltflag);
				freightDemandVo.setDemandType(BkgConstants.DEMAND_COMBINE_TYPE_LONG);//长期
			}
			if(StringUtils.isNoneBlank(stflag)){
				freightDemandVo.setDemandCombineCode(stflag);
				freightDemandVo.setDemandType(BkgConstants.DEMAND_COMBINE_TYPE_TEMP);//临时
			}
		}
		if(StringUtils.isNoneBlank(freightDemandVo.getDemandStatus())&&freightDemandVo.getDemandStatus().indexOf(",") != -1){
			freightDemandVo.setDemandStatusList(freightDemandVo.getDemandStatus().split(","));;
			freightDemandVo.setDemandStatus("");
		}
		Pagination<FreightDemandVo> pagination = freightDemandBiz.findByPagination(freightDemandVo, page);
		if(lttimer>0 && StringUtils.isNoneBlank(ltflag)){
			ltflag=null;
			lttimer=0;
		}
		if(lttimer==0 && StringUtils.isNoneBlank(ltflag)){
			lttimer++;
		}
		if(sttimer>0 && StringUtils.isNoneBlank(stflag)){
			stflag=null;
			sttimer=0;
		}
		if(sttimer==0 && StringUtils.isNoneBlank(stflag)){
			sttimer++;
		}
		return returnSuccess(pagination);
	}
	// 如果请求来自余长期需求查询或临时需求查询则为true，如果请求来自于其他页面的超链接跳转则为false
	private boolean isFromPage(FreightDemandVo vo){
		if("demandName".equals(vo.getDemandName()) || StringUtils.isNoneBlank(vo.getDemandSiteCode())||StringUtils.isNoneBlank(vo.getBeginStationCode())|| StringUtils.isNoneBlank(vo.getEndStationCode())|| StringUtils.isNoneBlank(vo.getDemandStatus())||StringUtils.isNoneBlank(vo.getBusinessMode())|| StringUtils.isNoneBlank(vo.getDemandCombineCode())){
			return true;
		}
		return false;
	}
	/**
	 * 
	 * @Description: 新增货运需求
	 * @param freightDemandVo
	 * @param request
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月25日 下午7:06:28
	 */
	@RequestMapping(value = "addFreightDemand")
	@ResponseBody
	public Map<String, Object> addFreightDemand(FreightDemandVo freightDemandVo, HttpServletRequest request) {
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		freightDemandVo.setCreateEmp(userInfo.getEmpName());
		freightDemandVo.setCreateOrg(userInfo.getCmsOrgName());
		freightDemandVo.setCreateTime(new Date());
		freightDemandVo.setVersion(BkgConstants.DEFALUT_VERSION);
		int res = freightDemandBiz.addFreightDemand(freightDemandVo);
		if (res > 0) {
			return returnSuccess(Resources.getMessage("common.save.success"));
		}else{
			return returnError(Resources.getMessage("common.save.fail"));
		}
	}

	/**
	 * 
	 * @Description: 更新需求信息
	 * @param freightDemandVo
	 * @param request
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月25日 下午7:06:07
	 */
	@RequestMapping(value = "updateFreightDemand")
	@ResponseBody
	public Map<String, Object> updateFreightDemand(FreightDemandVo freightDemandVo, HttpServletRequest request) {
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		freightDemandVo.setUpdateEmp(userInfo.getEmpName());
		freightDemandVo.setUpdateOrg(userInfo.getCmsOrgName());
		freightDemandVo.setUpdateTime(new Date());
		int res = freightDemandBiz.updateFreightDemand( freightDemandVo);
		if (res > 0) {
			return returnSuccess(Resources.getMessage("common.update.success"));
		}else{
			return returnError(Resources.getMessage("common.update.fail"));
		}
	}
	/**
	 * 
	 * @Description: 批量更新需求状态
	 * @param freightDemandVo
	 * @param request
	 * @return
	 * @author lixueyuan
	 * @date 2017年10月25日 下午6:30:09
	 */
	@RequestMapping(value = "updateStatus")
	@ResponseBody
	public Map<String, Object> updateStatus(String data, String demandStatus,HttpServletRequest request) {
		List<FreightDemandVo> freightDemandVos=(List<FreightDemandVo>)JSONArray.parseArray(data, FreightDemandVo.class);
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		for (FreightDemandVo freightDemandVo:freightDemandVos) {
			if(null != demandStatus&&!demandStatus.isEmpty()){
				freightDemandVo.setDemandStatus(demandStatus);
			}
			freightDemandVo.setUpdateEmp(userInfo.getEmpName());
			freightDemandVo.setUpdateOrg(userInfo.getCmsOrgName());
			freightDemandVo.setUpdateTime(new Date());
		}
		String res = freightDemandBiz.updateBatchDemandStatus( freightDemandVos);
		return res.indexOf(Resources.getMessage("success")) > -1 ? returnSuccess(res) : returnError(res);
	}
	/**
	 * 
	 * @Description: 发送报价 网点审核
	 * @param data
	 * @param demandStatus
	 * @param request
	 * @return
	 * @author lixueyuan
	 * @date 2017年11月1日 下午9:27:16
	 */
	@RequestMapping(value = "sendQuotation")
	@ResponseBody
	public Map<String, Object> sendQuotation(String data, HttpServletRequest request) {
		List<FreightDemandVo> freightDemandVos=(List<FreightDemandVo>)JSONArray.parseArray(data, FreightDemandVo.class);
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		List<String> sitecodes = new ArrayList<String>();
		for (FreightDemandVo freightDemandVo:freightDemandVos) {
			sitecodes.add(freightDemandVo.getDemandSiteCode());
			freightDemandVo.setUpdateEmp(userInfo.getEmpName());
			freightDemandVo.setUpdateOrg(userInfo.getCmsOrgName());
			freightDemandVo.setUpdateTime(new Date());
		}
		String res = freightDemandBiz.sendQuotation( freightDemandVos, sitecodes);
		return res.indexOf(Resources.getMessage("success")) > -1 ? returnSuccess(res) : returnError(res);
	}

}
