package cn.uce.suc.dot.control;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.biz.datamain.ICapacityManagementBiz;
import cn.uce.suc.bkg.entity.datamain.CapacityManagement;
import cn.uce.suc.bkg.service.datamain.CapacityManagementService;
import cn.uce.suc.bkg.vo.datamain.CapacityManagementVo;
import cn.uce.suc.common.constants.BkgConstants;
import cn.uce.suc.common.service.MobileuserService;
import cn.uce.suc.common.util.BaseAppController;
import cn.uce.suc.common.vo.MobileuserVo;
/**
 * 
 * @Description: 运力管理
 * @author zhandesheng
 * @date 2017年10月25日 下午3:52:59
 */
@RestController
@RequestMapping("/app/capacityManagement")
public class DotCapacityManagementController extends BaseAppController{
	
	/**
	 * 注入运力biz
	 */
	@Resource
	private ICapacityManagementBiz capacityManagementBiz;
	/**
	 * 注入运力Service
	 */
	@Resource
	private CapacityManagementService capacityManagementService;
	/**
	 * 注入mobileUserService
	 */
	@Resource
	private MobileuserService mobileUserService;
	/**
	 *
	 * @Description: 运力上报新增、编辑
	 * @param json_capacityManagement
	 * @author zhandesheng
	 * @date 2017年10月25日 下午4:00:15
	 */
	@PostMapping(value = "addOrEdit")
	@ResponseBody
	public Map<String, Object>addCapacityManagement(@RequestBody CapacityManagement capacityManagement){
		if(StringUtils.isEmpty(capacityManagement.getId())){
			capacityManagement.setBuyStatus(BkgConstants.CAPACITY_STATUS_CREATE);
			capacityManagement.setCarBelong(BkgConstants.CAR_BELONG_TYPE_SITE);
			capacityManagement.setCapacityCode(capacityManagementBiz.getCapacityCode());
			int addResult = capacityManagementBiz.appAddCapacityManagement(capacityManagement);
			if(addResult==1){
				return returnSuccess();
			}else if(addResult == -1){
				return returnError("提交运力的车牌号在有效期内已经使用,无法上报运力!");
			}else{
				return returnError();
			}
		}else{
			int editResult = capacityManagementBiz.updateCapacityManagement(capacityManagement);
			if(editResult==1){
				return returnSuccess();
			}else if(editResult == -1){
				return returnError("提交运力的车牌号在有效期内已经使用,无法上报运力!");
			}else{
				return returnError();
			}
		}
	}
	
	/**
	 * 
	 * @Description: 取消/确认 运力
	 * @param id 运力ID
	 * @param status 运力状态  确认与取消标识 1 代表确认 2 代表取消
	 * @author lixueyuan
	 * @date 2017年11月17日 下午3:24:34
	 */
	@GetMapping(value = "appCancelCapacity")
	public @ResponseBody Object updateBuyStatus(@RequestParam(value="id", required=true) Long id,@RequestParam(value="status", required=true) String status){
		CapacityManagement capacityManagement = new CapacityManagement();
		capacityManagement.setId(id);
		if("1".equals(status)){
			capacityManagement.setBuyStatus(BkgConstants.CAPACITY_STATUS_DOT_CONFIRM);
		}
		if("2".equals(status)){
			capacityManagement.setBuyStatus(BkgConstants.CAPACITY_STATUS_CANCEL);
		}
		int res=capacityManagementBiz.appUpdateById(capacityManagement);
		if(res>0){
			if("1".equals(status)){//网点已确认
				return returnSuccess("我的运力确认成功!");
			}else{//网点已取消
				return returnSuccess("我的运力取消成功!");
			}
		}else{
			if("2".equals(status)){//网点已确认
				return returnError("msg","我的运力确认失败!");
			}else{//网点已取消
				return returnError("msg","我的运力取消失败!");
			}
		}
	}
	/**
	 * 
	 * @Description: 分页 查询 网点 的上报运力
	 * @param mobilePhone  网点手机号
	 * @param buyStatus 运力状态 
	 * 	网点端状态标志: 待报价 01, 已报价(包含pc端的已报价和网点已确定)03, 已确认04, 已过期05,已终止06, 已取消07
	 * @param page 分页
	 * @return
	 * @author lixueyuan
	 * @date 2017年11月7日 下午1:24:58
	 */
	@GetMapping(value = "findByPagination")
	@ResponseBody
	public  Map<String, Object> findByPagination(@RequestParam(value="mobilePhone", required=true) String mobilePhone, @RequestParam(value="buyStatus", required=false) String buyStatus ,int currentPage,int pageSize){
		MobileuserVo mobileuserVo = new MobileuserVo();
		mobileuserVo.setMobilephone(mobilePhone);
		mobileuserVo.setDotType(true);
		mobileuserVo.setDptType(false);
		List<MobileuserVo> mobileuserVos = mobileUserService.findByUserMobilephone(mobileuserVo );
		CapacityManagementVo vo = new CapacityManagementVo();
		if(null != buyStatus&&!buyStatus.isEmpty()){
			vo.setBuyStatus(buyStatus);
		}
		if(null != mobileuserVos&&!mobileuserVos.isEmpty()){
			MobileuserVo muv = mobileuserVos.get(0);
			vo.setBelongSiteCode(muv.getBaseOrgCode());
		}
		Page page = new Page();
		page.setCurrentPage(currentPage);
		page.setPageSize(pageSize);
		Pagination<CapacityManagementVo> pagination = capacityManagementService.findByBelongSiteCodePagination(vo, page);
		return returnSuccess(pagination);
		
	}
	
	/**
	 * 
	 * @Description: 根据ID查询 上报运力
	 * @param id
	 * @return
	 * @author lixueyuan
	 * @date 2017年11月7日 下午1:28:13
	 */
	@GetMapping(value = "findById")
	@ResponseBody
	public  Map<String, Object> findById(@RequestParam(value="id", required=true) String id){
		CapacityManagement capacityManagement = capacityManagementBiz.findById( Long.valueOf(id));
		return returnSuccess(capacityManagement);
	}
	
	
	
	
}
