package cn.uce.suc.common.cache;

import java.util.List;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import cn.uce.base.exception.BusinessException;
import cn.uce.core.cache.CacheSupport;
import cn.uce.core.cache.storage.ICacheStorage;
import cn.uce.suc.common.constants.BkgConstants;
import cn.uce.suc.common.dao.ITruckCostManagementDao;
import cn.uce.suc.common.vo.TruckCostManagementVo;
import cn.uce.utils.StringUtil;

import com.alibaba.fastjson.JSON;

/**
 * 
 * @Description:算法车型缓存
 * @author laizhendong
 * @date 2017年11月2日 下午2:48:30
 */
public class IATruckModelCache extends CacheSupport<String> {

	/**
	 * 注入biz层
	 */
	@Resource
	private ITruckCostManagementDao truckCostManagementDao;

	/**
	 * 申明logger对象
	 */
	private final static Logger logger = LoggerFactory.getLogger(IATruckModelCache.class);

	
	/**
	 * @Description: 刷新缓存
	 * @param 
	 * @return 
	 * @author laizhendong
	 * @date 2017年11月11日 下午2:48:30
	 */
	@Override
	public String doGet(String key) throws BusinessException {
		if (StringUtil.isNotBlank(key)) {
			String[] keys = key.split(BkgConstants.UNDER_LINE);
			if (null != keys && keys.length == 2) {
				String orgCode = keys[0];
				String demandType = keys[1];
				TruckCostManagementVo search = new TruckCostManagementVo();
				search.setBelongSiteCode(orgCode);
				search.setTruckType(demandType);
				search.setDetailsStatus(BkgConstants.TRUCK_START);
				List<TruckCostManagementVo> list = truckCostManagementDao.findByCombine(search);
				//存入rides
				if (null != list && !list.isEmpty()) {
					return JSON.toJSONString(list);
				}
			}
		}
		return null;
	}

	
	/**
	 * @Description: 初始化用于算法车型，存储方式以key(中心_业务模式)-value(车型信息List)
	 * @param 
	 * @return 
	 * @author laizhendong
	 * @date 2017年11月11日 下午2:48:30
	 */
	/*@Override
	public ResultMap<String,String> doInitialization(IKeyGenerator<String> generator) throws BusinessException {
		TruckCostManagementVo search = new TruckCostManagementVo();
		search.setDetailsStatus(BkgConstants.TRUCK_START);
		List<TruckCostManagementVo> list = truckCostManagementDao.findByCombine(search);
		ResultMap<String, String> map = new ResultMap<String, String>(generator);
		Map<String, List<TruckCostManagementVo>> truckCostManagementVoMap = new HashMap<String, List<TruckCostManagementVo>>();
		//存入rides
		if (null != list && !list.isEmpty()) {
			//根据key(中心_业务模式)-value(车型信息List)分组
			List<TruckCostManagementVo> truckCostManagementVos = null;
			for (TruckCostManagementVo truckCostManagementVo : list) {
				if (null != truckCostManagementVo) {
					String orgCode = truckCostManagementVo.getBelongSiteCode();
					String demandType = truckCostManagementVo.getTruckType();
					if (StringUtil.isNotBlank(orgCode) && StringUtil.isNotBlank(demandType)) {
						String key = orgCode + BkgConstants.UNDER_LINE + demandType;
						if (!truckCostManagementVoMap.containsKey(key)) {
							truckCostManagementVos = new ArrayList<TruckCostManagementVo>();
						}else {
							truckCostManagementVos = truckCostManagementVoMap.get(key);
						}
						truckCostManagementVos.add(truckCostManagementVo);
						truckCostManagementVoMap.put(key, truckCostManagementVos);
					}
					
				}
			}
			//存入缓存
			if (!truckCostManagementVoMap.isEmpty()) {
				for (String key : truckCostManagementVoMap.keySet()) {
					List<TruckCostManagementVo> cacheTruckCostManagementVo = truckCostManagementVoMap.get(key); 
					if (null != cacheTruckCostManagementVo && !cacheTruckCostManagementVo.isEmpty()) {
						map.put(key, JSON.toJSONString(cacheTruckCostManagementVo));
					}
				}
			}
		}
		return map;
	}*/

	/** cache名称 
	* <p>Title: getCacheId</p> 
	* <p>Description: </p> 
	* @return 
	* @see cn.uce.core.cache.base.ICache#getCacheId() 
	*/
	@Override
	public String getCacheId() {
		return this.getClass().getSimpleName();
	}
	
	@Override
	public ICacheStorage<String,String> getStorage(){
		return super.getStorage();
	}
}
