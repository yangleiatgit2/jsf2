package cn.uce.suc.bkg.control.operation;

import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.core.excel.entity.vo.NormalExcelConstants;
import cn.uce.core.poi.excel.entity.ExportParams;
import cn.uce.suc.bkg.biz.ia.IIaSyncBiz;
import cn.uce.suc.bkg.biz.operation.IIaConfBiz;
import cn.uce.suc.bkg.vo.ia.FreigtCombineVo;
import cn.uce.suc.bkg.vo.operation.IaConfVo;
import cn.uce.suc.common.util.DataConversionUtil;
import cn.uce.suc.common.vo.SucCurrentUser;
import cn.uce.web.common.base.BaseController;
import cn.uce.web.common.i18n.Resources;
import cn.uce.web.common.util.WebUtil;
/**
 * 
 * @Description: 智能算法参数controller
 * @author laizhendong
 * @date 2017年10月19日 下午4:14:48
 */
@Controller
@RequestMapping("/iaConf")
public class IaConfController extends BaseController {
	
	/**
	 * 智能算法biz
	 */
	@Resource
	private IIaConfBiz iaConfBiz;
	
	@Resource
	private IIaSyncBiz iaSyncBiz;
	
	@RequestMapping(value = "/forward")
	public String get(HttpServletRequest request, HttpServletResponse response) {
		return "bkg/iaConf";
	}
	
	/**
	 * 
	 * @Description: 根据条件分页查找算法参数 
	 * @param iaConfVo
	 * @param page
	 * @return
	 * @author laizhendong
	 * @date 2017年10月19日 下午8:54:14
	 */
	@RequestMapping(value = "/findByPagination")
	@ResponseBody
	public Map<String, Object> findByPagination(IaConfVo iaConfVo,Page page){
		Pagination<IaConfVo> pagination =  iaConfBiz.findByPagination(iaConfVo, page);
		return returnSuccess(pagination);
	}
	
	
	/**
	 * 
	 * @Description: 添加算法参数 
	 * @param iaConfVo
	 * @return
	 * @author laizhendong
	 * @date 2017年10月19日 下午8:47:28
	 */
	@RequestMapping(value = "/addIaConf")
	@ResponseBody
	public Map<String, Object> addIaConf(IaConfVo iaConfVo){
		//获取当前登录用户信息
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		//设置创建人、创建机构、创建时间
		iaConfVo.setCreateEmp(userInfo.getEmpName());
		iaConfVo.setCreateOrg(userInfo.getCmsBaseOrgCode());
		iaConfVo.setCreateTime(new Date());
		int result = iaConfBiz.addIaConf(iaConfVo);
		if (result > 0) {
			return returnSuccess(Resources.getMessage("common.save.success"));
		}
		return returnSuccess(Resources.getMessage("common.save.fail"));
	}
	
	/**
	 * 
	 * @Description: 更新算法参数 
	 * @param iaConfVo
	 * @return
	 * @author laizhendong
	 * @date 2017年10月19日 下午8:47:28
	 */
	@RequestMapping(value = "/updateIaConf")
	@ResponseBody
	public Map<String, Object> updateIaConf(IaConfVo iaConfVo){
		//获取当前登录用户信息
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		//设置创建人、创建机构、创建时间
		iaConfVo.setCreateEmp(userInfo.getEmpName());
		iaConfVo.setCreateOrg(userInfo.getCmsBaseOrgCode());
		iaConfVo.setCreateTime(new Date());
		iaConfBiz.updateIaConf(iaConfVo);
		return returnSuccess(Resources.getMessage("common.save.success"));
	
	}
	
	/**
	 * 
	 * @Description: 导出算法参数 
	 * @param iaConfVo
	 * @return
	 * @author laizhendong
	 * @date 2017年10月19日 下午8:47:28
	 */
	@RequestMapping("exportXls")
	public String exportXls(IaConfVo iaConfVo, ModelMap map) {
		//获取当前登录用户信息
		SucCurrentUser userInfo = DataConversionUtil.getUserInfo(WebUtil.getCurrentUser());
		List<IaConfVo> iaConfVos = iaConfBiz.findByCondition(iaConfVo);
		map.put(NormalExcelConstants.FILE_NAME, "智能算法参数");
		map.put(NormalExcelConstants.CLASS, IaConfVo.class);
		map.put(NormalExcelConstants.PARAMS, new ExportParams("智能算法参数", "导出人:" + userInfo.getEmpName(), "导出信息"));
		map.put(NormalExcelConstants.DATA_LIST,iaConfVos);
		return NormalExcelConstants.JEECG_EXCEL_VIEW;
	}
	
	/**
	 * 
	 * @Description: 页面智能排班 
	 * @param freigtCombineVo
	 * @return
	 * @author laizhendong
	 * @date 2017年11月7日 下午9:13:57
	 */
	@RequestMapping("smartSchedule")
	@ResponseBody
	public Map<String, Object> smartSchedule(FreigtCombineVo freigtCombineVo) {
		//异步执行智能排班
		iaSyncBiz.smartSchedule(freigtCombineVo);
		return returnSuccess(Resources.getMessage("bkg.controller.IaConfController.iaRunning"));
	}
	
}
