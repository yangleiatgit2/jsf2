package cn.uce.suc.bkg.biz.impl.datamain;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.biz.datamain.ICarManageBiz;
import cn.uce.suc.bkg.entity.datamain.CarManage;
import cn.uce.suc.bkg.entity.datamain.CarManager;
import cn.uce.suc.bkg.exception.BkgModuleException;
import cn.uce.suc.bkg.service.datamain.CarManageService;
import cn.uce.suc.bkg.vo.datamain.CarManageVo;
import cn.uce.suc.common.ids.IIdsWorker;
import cn.uce.suc.common.ids.IdsConstants;

/**
 * @Description: 车辆信息表BIZ实现类
 * @author UCE-CodeGenerator
 * @date 2017年10月25日 下午05:08:33
 */
@Service("carManageBiz")
@Transactional(readOnly = true,propagation=Propagation.SUPPORTS)
public class CarManageBiz implements ICarManageBiz {
	
	/**
	 * 注入车辆信息表Service
	 */
	@Resource
	private CarManageService carManageService;
	/**
	 * 注入reids生成编码
	 */
	@Resource
	IIdsWorker  redisIdsWorker;
	
//	private void checkExistsByPlateNumber(){
//		
//	}
	
	/**
	 * @Description: 新增车辆信息表
	 * @param carManage
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	@Transactional(readOnly=false,propagation=Propagation.REQUIRED)
	public int addCarManage(CarManage carManage) {
		/*String code = createCarNumber();
		//查询当日最大编号  注:改查询最大方法加了synchronize防止并发插入相同车编号
		String maxCode = carManageService.findMaxCarNumber(code);
		if(maxCode==null){
			code = code+"00001";
			carManage.setCarNumber(code);
		}
		if(maxCode!=null){
			Long num = Long.valueOf(maxCode.substring(2));
			num++;
			code  = SucConstants.CAR_NUMBER_PREFIX+num;
			carManage.setCarNumber(code);
		}*/
		//设置初始版本号
		carManage.setVersion(1);
		//改为redis生成
		String code = redisIdsWorker.nextId(IdsConstants.IdsPrefix.CL);
		carManage.setCarNumber(code);
		return carManageService.addCarManage(carManage);
	}
	/**
	 * 
	 * @Description:生成车辆编号前缀
	 * @return
	 * @author zhangqiang
	 * @date 2017年11月7日 下午1:30:52
	 */
	/*private String createCarNumber(){
		Date now = new Date();
		String carNumber = SucConstants.CAR_NUMBER_PREFIX+DateUtil.formatDate(now, "yyMMdd");
		return carNumber;
	}*/
	
	/**
	 * @Description: 修改车辆信息表
	 * @param carManage 车辆信息表
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	@Transactional(readOnly=false,propagation=Propagation.REQUIRED)
	public int updateCarManage(CarManage carManage) {
		checkVersion(carManage);
		return carManageService.updateById(carManage);
	}
	/**
	 * 
	 * @Description: 修改数据检查版本号确定是否并发操作
	 * @author zhangqiang
	 * @date 2017年11月22日 下午1:54:19
	 */
	private void checkVersion(CarManage carManage){
		//传入对象非空
		if(carManage == null) {
			throw new BkgModuleException("concurrency.ontrol.data.is.not.exist");
		}
		CarManage c = findById(carManage.getId());
		if(c == null){
			//不存在异常
			throw new BkgModuleException("concurrency.ontrol.data.is.not.exist");
		}
		//版本号发生变化
		if(!c.getVersion().equals(carManage.getVersion())){
			throw new BkgModuleException("concurrency.ontrol.data.is.change");
		}
	}
	/**
	 * @Description: 删除车辆信息表
	 * @param id 主键
	 * @return 受影响行数
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	@Transactional(readOnly=false,propagation=Propagation.REQUIRED)
	public int deleteCarManage(Long id) {
		return carManageService.deleteById(id);
	}
	
	/**
	 * @Description: 根据ID查询车辆信息表
	 * @param id 主键
	 * @return 车辆信息表
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	@Override
	public CarManage findById(Long id) {
		return carManageService.findById(id);
	}
	
	/**
	 * @Description: 分页查询车辆信息表
	 * @param carManageVo 车辆信息表
	 * @param page 分页参数
	 * @return 车辆信息表
	 * @author UCE-CodeGenerator
	 * @date 2017年10月25日 下午05:08:33
	 */
	public Pagination<CarManage> findByPagination(CarManageVo carManageVo, Page page) {
		Pagination<CarManage> pagination = carManageService.findByPagination(carManageVo, page);
		return pagination;
	}
	/**
	 * 
	 * @Description: 根据条件查询车辆信息
	 * @param carManageVo
	 * @param page
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月25日 下午6:20:27
	 */
	public Pagination<CarManage> findByCondition(CarManageVo carManageVo, Page page){
		Pagination<CarManage> pagination = carManageService.findByCondition(carManageVo, page);
		return pagination;
	}
	/**
	 * 
	 * @Description: 查询一个月到期和已经到期车辆
	 * @param carManageVo
	 * @param page
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月25日 下午9:49:41
	 */
	public Pagination<CarManage> findByInsurance(CarManageVo carManageVo, Page page){
		Pagination<CarManage> pagination = carManageService.findByInsurance(carManageVo, page);
		return pagination;
	}
	/**
	 * 
	 * @Description: 不分页查询用于导出
	 * @param carManageVo
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月25日 下午10:16:29
	 */
	public List<CarManageVo> findByExport(CarManageVo carManageVo){
		List<CarManageVo> cars = carManageService.findByExport(carManageVo);
		return cars;
	}
	/**
	 * 
	 * @Description: 查询所有车辆信息
	 * @param id
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月26日 下午4:36:15
	 */
	public List<CarManager> findCarManage() {
		return carManageService.findCarManage();
	}
	/**
	 * 
	 * @Description: 车辆下拉查询
	 * @param carManageVo
	 * @param page
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月30日 下午5:16:51
	 */
	public Pagination<CarManage> findCarByCmbgd(CarManageVo carManageVo, Page page){
		Pagination<CarManage> pagination = carManageService.findCarByCmbgd(carManageVo, page);
		return pagination;
	}
	/**
	 * @Description: 根据编号和司机等查询车辆
	 * @param carManageVo
	 * @return CarManageVo
	 * @author yanglei
	 * @date 2017年11月19日 下午05:05:42
	 */
	public List<CarManageVo> findByVo(CarManageVo carManageVo){
		return carManageService.findByVo(carManageVo);
	}

	/**
	 * 
	 * @Description: 根据车牌号检查是否存在
	 * @param carManageVo
	 * @param page
	 * @return
	 * @author xiesonglin
	 * @date 2017年12月26日 
	 */
	public CarManageVo checkeExistsByPlateNumber(CarManageVo carManageVo) {
		return this.carManageService.checkeExistsByPlateNumber(carManageVo);
	}
}