package cn.uce.suc.bkg.biz.impl.datamain;

import java.util.Calendar;
import java.util.Date;

import javax.annotation.Resource;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;

import cn.uce.base.page.Page;
import cn.uce.suc.bkg.biz.datamain.ICapacityGapManagementBiz;
import cn.uce.suc.bkg.entity.datamain.CapacityGapManagement;
import cn.uce.suc.bkg.vo.datamain.CapacityGapManagementVo;
import cn.uce.suc.bkg.vo.operation.CarVolumeVo;
import cn.uce.suc.bkg.vo.operation.FreightOrderVo;

/**
 * 
 * @Description: 异常单元测试类
 * @author yanglei
 * @date 2017年11月21日 下午7:42:23
 */
@WebAppConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath*:spring-*.xml",
		"classpath*:*/spring-*.xml" })
public class CapacityGapManagementBizTest {
	/**
	 * 注入ICapacityGapManagementBiz对象
	 */
	@Resource
	private ICapacityGapManagementBiz capacityGapManagementBiz; // 运力缺口biz
	private CapacityGapManagement gap;
	private CapacityGapManagementVo gapVo;
	private Date[] getDateSection() {
		// 获取当前月第一天：
		Calendar c = Calendar.getInstance();
		c.add(Calendar.MONTH, 0);
		c.set(Calendar.DAY_OF_MONTH, 1);// 设置为1号,当前日期既为本月第一天
		c.set(Calendar.HOUR_OF_DAY, 0);
		c.set(Calendar.MINUTE, 0);
		c.set(Calendar.SECOND, 0);
		Date first = c.getTime();

		// 获取当前月最后一天
		Calendar ca = Calendar.getInstance();
		ca.set(Calendar.DAY_OF_MONTH,
				ca.getActualMaximum(Calendar.DAY_OF_MONTH));
		ca.set(Calendar.HOUR_OF_DAY, 23);
		ca.set(Calendar.MINUTE, 59);
		ca.set(Calendar.SECOND, 59);
		Date last1 = ca.getTime();
		Date[] dateSection = new Date[2];
		dateSection[0] = first;
		dateSection[1] = last1;
		return dateSection;
	}

	/**
	 * 页码类
	 */
	private Page page;

	/**
	 * 
	 * @Description: 初始化方法
	 * @author yanglei
	 * @date 2017年11月21日 下午10:15:33
	 */
	@Before
	public void init() {
		page = new Page();
		gap=new CapacityGapManagement();
		gap.setActualNeed(1);
		gap.setRemark("test");
		gap.setTruckType("01");
		gapVo=new CapacityGapManagementVo();
		System.out.println("==========单元测试开始========");
	}

	/**
	 * 
	 * @Description: 方法执行后
	 * @author yanglei
	 * @date 2017年11月21日 下午10:15:47
	 */
	@After
	public void excuteEnd() {
		System.out.println("==========单元测试结束========");
	}

	/**
	 * 
	 * @Description: 测试方法
	 * @author yanglei
	 * @date 2017年11月6日 下午10:16:01
	 */
	@Test
	public void test() {

		CarVolumeVo vo = new CarVolumeVo();
		Date[] dateSection = getDateSection();

		Date startDate = dateSection[0];

		Date endDate = dateSection[1];

		vo = capacityGapManagementBiz.getCarVolumeVo("UC000002","深圳操作中心", startDate, endDate);
		capacityGapManagementBiz.addCapacityGapManagement(gap);
		capacityGapManagementBiz.findById(gap.getId());
		capacityGapManagementBiz.findByPagination(gapVo, page);
		String demandSiteCode="UC016983";
		String demandSite="浦东五部";
		String timeSection="2017-11-15 ~ 2017-11-23";
		String orderCombinCodeArr="OZ17111400002,OZ17111400003";
		FreightOrderVo orderVo=new FreightOrderVo();
		orderVo.setDemandSiteCode(demandSiteCode);
		capacityGapManagementBiz.deleteCapacityGapManagement(gap.getId());
		capacityGapManagementBiz.getCarGapByComebine(orderVo, page);
		capacityGapManagementBiz.getCarGapByDay(demandSiteCode, demandSite, timeSection, page);
		capacityGapManagementBiz.getCarVolumeVo(demandSiteCode, demandSite, startDate, endDate);
		capacityGapManagementBiz.getCarVolumeVoByComebine(demandSiteCode, demandSite, timeSection, orderCombinCodeArr, page);
	}

}
