package cn.uce.suc.app.control;

import java.io.IOException;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import sun.misc.BASE64Decoder;
import cn.uce.suc.app.biz.ICaptchaBiz;
import cn.uce.suc.app.biz.IappRegisterbiz;
import cn.uce.suc.common.biz.IFileUpBiz;
import cn.uce.suc.common.biz.IMobileuserBiz;
import cn.uce.suc.common.entity.LoginEntity;
import cn.uce.suc.common.util.BaseAppController;
import cn.uce.suc.common.vo.MobileuserVo;
import cn.uce.web.file.vo.FileInfoVO;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;

/**
 * 
 * @Description: 用户信息
 * @author liwei
 * @date 2017年11月30日 下午8:32:47
 */
@RequestMapping("/app/personInfo")
@RestController
public class PersonInfoController extends BaseAppController {

	/**
	 * 移动用户
	 */

	@Resource
	IMobileuserBiz mobileuserBiz;
	/**
	 * 
	 */
	@Resource
	private ICaptchaBiz captchaBiz;

	/** 附件biz */
	@Resource
	private IFileUpBiz fileUpBiz;
	/**
	 * 注册
	 */
	@Resource
	private IappRegisterbiz appRegisterBiz;
	/**
	 * 日志
	 */
	protected static Logger log = LoggerFactory.getLogger(PersonInfoController.class);

	/**
	 * 
	 * @Description:个人信息修改
	 * @param mobileuserVo
	 * @return
	 * @author lixueyuan
	 * @date 2017年11月28日 下午2:57:33
	 */
	@PostMapping(value = "/updatePersonInfoById")
	public @ResponseBody Map<String, Object> updatePersonInfoById(@RequestBody MobileuserVo mobileuserVo) {
		int res = mobileuserBiz.updateMobileuser(mobileuserVo);
		if (res > 0) {
			return returnSuccess("个人信息保存成功!");
		} else {
			return returnError("msg", "个人信息保存失败!");
		}
	}

	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用)
	 * @param mobileuserVo
	 * @return
	 * @author liwei
	 * @date 2017年11月30日 上午10:55:24
	 */
	@PostMapping(value = "/userAuthCapth")
	public @ResponseBody Map<String, Object> userAuthenticationCapch(@RequestBody MobileuserVo mobileuserVo) {
		return appRegisterBiz.userAuthenticationCapch(mobileuserVo);
	}

	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用)
	 * @param mobileuserVo
	 * @return
	 * @author liwei
	 * @date 2017年11月30日 上午10:55:24
	 */
	@PostMapping(value = "/userAuth")
	public @ResponseBody Map<String, Object> userAuthentication(@RequestBody MobileuserVo mobileuserVo) {
		return appRegisterBiz.userAuthentication(mobileuserVo);
	}

	/**
	 * 
	 * @Description:: IOS 上传附件 64编码字符串 转换成图片文件
	 * @param uploadFile
	 * @param subSys
	 * @return
	 * @throws IOException
	 * @author lixueyuan
	 * @date 2017年11月30日 上午10:39:36
	 */
	@PostMapping(value = "/iosFileUpload")
	public Map<String, Object> iosFileUpload(@RequestBody String data) throws IOException {
		// logger.info("参数：" + data);
		JSONObject parseObject = JSON.parseObject(data);
		if (null != parseObject && null != parseObject.get("uploadFile")) {
			String uploadFile = (String) parseObject.get("uploadFile");
			String subSys = (String) parseObject.get("subSys");
			if (StringUtils.isNotBlank(uploadFile)) {
				@SuppressWarnings("restriction")
				BASE64Decoder decoder = new BASE64Decoder();
				@SuppressWarnings("restriction")
				byte[] bytes = decoder.decodeBuffer(uploadFile);
				// ByteArrayInputStream input = new
				// ByteArrayInputStream(decode.getBytes());
				for (int i = 0; i < bytes.length; ++i) {
					if (bytes[i] < 0) {// 调整异常数据
						bytes[i] += 256;
					}
				}
				FileInfoVO info = new FileInfoVO();
				info.setSubSys(subSys);
				info.setOldFileName("1.png");
				String fileId = fileUpBiz.uploadFile(bytes, info);
				logger.info("上传结果：" + fileId);
				return returnSuccess(fileId);
			}
		}
		return returnError("msg", "上传图片不存在!");
	}
	
	/**
	 * 设置极光ID
	 * 
	 * @param mobilephone
	 * @return
	 */
	@PostMapping(value = "/registrationID")
	public @ResponseBody Map<String, Object> setRegistrationID(@RequestBody LoginEntity loginEntity) {
		captchaBiz.setRegistrationID(loginEntity);
		 return returnSuccess();
	}
}
