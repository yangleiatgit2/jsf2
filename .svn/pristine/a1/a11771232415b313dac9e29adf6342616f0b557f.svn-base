package cn.uce.suc.bkg.service.operation;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import cn.uce.base.page.Page;
import cn.uce.base.page.Pagination;
import cn.uce.suc.bkg.cache.IAConfCacheProcessor;
import cn.uce.suc.bkg.dao.operation.IIaConfDao;
import cn.uce.suc.bkg.entity.operation.IaConf;
import cn.uce.suc.bkg.vo.operation.IaConfVo;

/**
 * @Description: 智能算法参数维护Service类
 * @author laizhendong
 * @date 2017年10月19日 下午08:41:03
 */
@Service("iaConfService")
public class IaConfService {
	
	/**
	 * 注入智能算法参数维护Dao
	 */
	@Resource
	private IIaConfDao iaConfDao;
	
	/**
	 * @Description: 新增智能算法参数维护
	 * @param iaConf 智能算法参数维护
	 * @return 受影响行数
	 * @author laizhendong
	 * @date 2017年10月19日 下午08:41:03
	 */
	public int addIaConf(IaConf iaConf) {
		int rec = iaConfDao.insert(iaConf);
		IAConfCacheProcessor.refresh(iaConf.getOrgCode());
		return rec;
	}
	
	/**
	 * @Description: 修改智能算法参数维护
	 * @param iaConf 智能算法参数维护
	 * @return 受影响行数
	 * @author laizhendong
	 * @date 2017年10月19日 下午08:41:03
	 */
	public int updateById(IaConf iaConf) {
		int rec = iaConfDao.updateById(iaConf);
		IAConfCacheProcessor.refresh(iaConf.getOrgCode());
		return rec;
	}
	
	/**
	 * @Description: 删除智能算法参数维护
	 * @param id 主键
	 * @return 受影响行数
	 * @author laizhendong
	 * @date 2017年10月19日 下午08:41:03
	 */
	public int deleteById(Long id) {
		IaConf oldIaConf = findById(id);
		int rec = iaConfDao.deleteById(id);
		IAConfCacheProcessor.refresh(oldIaConf.getOrgCode()); 
		return rec;
	}
	
	/**
	 * @Description: 根据ID查询智能算法参数维护
	 * @param id 主键
	 * @return 智能算法参数维护
	 * @author laizhendong
	 * @date 2017年10月19日 下午08:41:03
	 */
	public IaConf findById(Long id) {
		return iaConfDao.findById(id);
	}
	
	/**
	 * @Description: 分页查询智能算法参数维护
	 * @param iaConfVo 智能算法参数维护
	 * @param page 分页参数
	 * @return 智能算法参数维护
	 * @author laizhendong
	 * @date 2017年10月19日 下午08:41:03
	 */
	public Pagination<IaConfVo> findByPagination(IaConfVo iaConfVo, Page page) {
		Pagination<IaConfVo> paginationIaConf = iaConfDao.findByPagination(iaConfVo, page);
		return paginationIaConf;
	}
	
	/**
	 * 
	 * @Description: 根据条件查询参数
	 * @param iaConfVo
	 * @return
	 * @author laizhendong
	 * @date 2017年10月20日 上午11:31:33
	 */
	public List<IaConfVo> findByCondition(IaConfVo iaConfVo){
		return iaConfDao.findByCondition(iaConfVo);
	}
	
}