package cn.uce.suc.common.control;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.codec.Base64;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import cn.uce.suc.common.biz.IFileUpBiz;
import cn.uce.suc.common.vo.FileVo;
import cn.uce.utils.JsonUtil;
import cn.uce.web.common.base.BaseController;
import cn.uce.web.file.entity.FileInfoList;
import cn.uce.web.file.vo.FileInfoVO;
import cn.uce.web.file.vo.ResultVO;

/**
 * 
 * @Description: TODO(这里用一句话描述这个类的作用)
 * @author liwei
 * @date 2017年10月12日 下午9:06:21
 */
@Controller
@RequestMapping("/fileUp")
public class FileUpController extends BaseController {
	/** 附件biz */
	@Resource
	private IFileUpBiz fileUpBiz;

	/**
	 * 
	 * @Description: 上传附件
	 * @param files
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 * @author liwei
	 * @date 2017年10月12日 下午9:11:50
	 */
	@RequestMapping(value = "/fileupload.do")
	public String fileupload(@RequestParam(value = "files", required = false) MultipartFile files,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		logger.info("上传开始files：" + files.getSize());
		FileInfoVO info = new FileInfoVO();
		byte[] file1bys = files.getBytes();
		String file_id = fileUpBiz.uploadFile(file1bys, info);
		logger.info("上传结果：" + file_id);
		return file_id;
	}
	/**
	 * 
	 * @Description: 查询图
	 * @param info
	 * @param max
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 * @author zhangqiang
	 * @date 2017年10月31日 下午4:17:18
	 */
	@RequestMapping(value = "/selectFileInfo.do")
	@ResponseBody
	public Map<String, Object> selectFileInfo(FileInfoVO info, int max, HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		response.setHeader("content-type", "application:json;charset=utf8");
		response.setHeader("Access-Control-Allow-Origin", "*");
		response.setHeader("Access-Control-Allow-Methods", "post");
		response.setHeader("Access-Control-Allow-Headers", "content-type");
		int start = 0;
		FileInfoList list = fileUpBiz.selectFileInfo(info, start, max);
		return returnSuccess(list);
	}
	/**
	 * 
	 * @Description: 下在图片
	 * @param fileId
	 * @param request
	 * @param response
	 * @throws IOException
	 * @author zhangqiang
	 * @date 2017年10月31日 下午4:17:05
	 */
	@RequestMapping(value = "/downLoadFile.do")
	@ResponseBody
	public void downLoadFile(@RequestParam(value = "fileId") String fileId, HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		response.setHeader("content-type", "application:json;charset=utf8");
		response.setHeader("Access-Control-Allow-Origin", "*");
		response.setHeader("Access-Control-Allow-Methods", "post");
		response.setHeader("Access-Control-Allow-Headers", "content-type");
		logger.info("查看开始：");
		FileInfoVO info = new FileInfoVO();
		info.setFileId(fileId);
		byte[] file_id = fileUpBiz.downLoadFile(info);
		response.setContentType("application/octet-stream");
		// 通知浏览器下载文件而不是打开
		response.addHeader("Content-Disposition",
				"attachment;filename=" + fileId.substring(fileId.lastIndexOf("/") + 1));
		response.setHeader("Pragma", "No-cache");
		response.setHeader("Cache-Control", "No-cache");
		response.setDateHeader("Expires", 0);
		response.getOutputStream().write(file_id);
		response.getOutputStream().flush();
		logger.info("查看结果：" + file_id.length);
	}
	/**
	 * 
	 * @Description: 批量上传图片
	 * @param files
	 * @param info
	 * @param request
	 * @param response
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月31日 下午4:16:47
	 */
	@RequestMapping(value = "/batchFile.do")
	@ResponseBody
	public Map<String, Object> batchFile(@RequestParam(value = "files", required = false) MultipartFile[] files,
			FileInfoVO info, HttpServletRequest request, HttpServletResponse response) {
		response.setHeader("content-type", "application:json;charset=utf8");
		response.setHeader("Access-Control-Allow-Origin", "*");
		response.setHeader("Access-Control-Allow-Methods", "post");
		response.setHeader("Access-Control-Allow-Headers", "content-type");
		long start_date = System.currentTimeMillis();
		logger.info("上传开始时间：" + start_date);
		final MultipartFile[] unloadFiles = files;
		List<String> list = fileUpBiz.uploadFile(unloadFiles, info);
		logger.info("上传结束时间：" + (System.currentTimeMillis() - start_date));
		return returnSuccess(list);
	}
	/**
	 * 
	 * @Description: 查看图片
	 * @param fileId
	 * @param request
	 * @param response
	 * @throws IOException
	 * @author zhangqiang
	 * @date 2017年10月31日 下午4:16:34
	 */
	@RequestMapping(value = "/showFile.do")
	@ResponseBody
	public void showFile(String fileId, HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setHeader("content-type", "application:json;charset=utf8");
		response.setHeader("Access-Control-Allow-Origin", "*");
		response.setHeader("Access-Control-Allow-Methods", "post");
		response.setHeader("Access-Control-Allow-Headers", "content-type");
		logger.info("查看开始：");
		FileInfoVO info = new FileInfoVO();
		info.setFileId(fileId);
		byte[] file_id = fileUpBiz.downLoadFile(info);
		response.getOutputStream().write(file_id);
		logger.info("查看结果：" + file_id.length);
	}
	/**
	 * 
	 * @Description: 删除图片
	 * @param file_id
	 * @param deleteType
	 * @param request
	 * @param response
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月31日 下午4:16:19
	 */
	@RequestMapping(value = "/deleteFile.do")
	@ResponseBody
	public Map<String, Object> deleteFile(@RequestParam String file_id, @RequestParam String deleteType,
			HttpServletRequest request, HttpServletResponse response) {
		response.setHeader("content-type", "application:json;charset=utf8");
		response.setHeader("Access-Control-Allow-Origin", "*");
		response.setHeader("Access-Control-Allow-Methods", "post");
		response.setHeader("Access-Control-Allow-Headers", "content-type");
		logger.info("删除开始：file_id=" + file_id + "|deleteType=" + deleteType);
		FileInfoVO info = new FileInfoVO();
		info.setFileId(file_id);
		boolean flag = fileUpBiz.deleteFile(info, deleteType);
		logger.info("删除结果：" + flag);
		return returnSuccess(String.valueOf(flag));
	}
	/**
	 * 
	 * @Description: 上传方式一
	 * @param files
	 * @param info
	 * @param request
	 * @param response
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月31日 下午4:15:54
	 */
	@RequestMapping(value = "/uploadTabsFile.do")
    @ResponseBody
    public Map<String,Object> uploadTabsFile(@RequestParam(value = "files", required = true) String files,FileInfoVO info,HttpServletRequest request, HttpServletResponse response){
        logger.info("上传开始files：" + files);
        List<String> resultList = new ArrayList<String>();
        if(null != files) {
            List list = JsonUtil.parseJson(files, List.class);
            if(null != list){
                for (Iterator it = list.iterator(); it.hasNext();) {
                    Object obj = (Object) it.next();
                    if(null != obj && obj.toString() != "{}"){
                        FileVo file = JsonUtil.parseJson(JsonUtil.toJson(obj), FileVo.class);
                        String str = file.getFile();
                        logger.info("原64："+file);
                        String b_64 = str.substring(str.indexOf(",") + 1);
                        logger.info(b_64);
                        byte[] f_b = Base64.decode(b_64);
                        info.setOldFileName(file.getName());
                        String file_id = fileUpBiz.uploadFile(f_b, info);
                        resultList.add(file_id);
                    }
                }
            }
        }
        logger.info("上传结束：" + JsonUtil.toJson(resultList));
        return returnSuccess(resultList);
    }
	/**
	 * 
	 * @Description: 修改图片
	 * @param info
	 * @return
	 * @author zhangqiang
	 * @date 2017年10月31日 下午4:15:45
	 */
    @RequestMapping(value = "/updateFileInfo.do")
    @ResponseBody
    public Map<String, Object> updateFileInfo(FileInfoVO info) {
        ResultVO result = fileUpBiz.updateFileInfo(info);
        return returnSuccess(result);
    }
}
