package cn.uce.suc.app.control;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.FileUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import cn.uce.suc.app.biz.ICaptchaBiz;
import cn.uce.suc.app.biz.IappRegisterbiz;
import cn.uce.suc.common.entity.LoginEntity;
import cn.uce.suc.common.util.BaseAppController;
import cn.uce.suc.common.util.Md5Helper;
import cn.uce.suc.common.util.SqlConnection;
import cn.uce.suc.common.vo.MobileuserVo;

/**
 * 
 * @Description: 移动端登陆
 * @author liwei
 * @date 2017年11月6日 下午1:56:39
 */
@RestController
@RequestMapping("/applogin")
public class AppLoginController extends BaseAppController {
	

	@Resource
	private ICaptchaBiz captchaBiz;
	/**
	 * 注册
	 */
	@Resource
	private IappRegisterbiz appRegisterBiz;
	@Value("${db.url}")
	private String url;
	@Value("${db.username}")
	private String username;
	@Value("${db.password}")
	private String password;

	/**
	 * 日志
	 */
	protected static Logger log = LoggerFactory.getLogger(AppLoginController.class);

	/**
	 * App登陆入口
	 * 
	 * @param loginEntity
	 * @param logininfoVo
	 * @return
	 */
	@PostMapping(value = "/login")
	public @ResponseBody Map<String, Object> login(@RequestBody LoginEntity loginEntity,HttpServletRequest request) {
		return captchaBiz.login(loginEntity);

	}

	/**
	 * 注销登陆
	 * 
	 * @param mobilephone
	 * @return
	 */
	@PostMapping(value = "/logout")
	public @ResponseBody Map<String, Object> logout(@RequestBody LoginEntity loginEntity) {
		captchaBiz.logout(loginEntity);
		return returnSuccess();
	}

	/**
	 * 忘记密码获取验证吗
	 * 
	 * @param mobilephone
	 * @return
	 */
	@PostMapping(value = "/updateCapch")
	public @ResponseBody Map<String, Object> updateCapch(@RequestBody LoginEntity loginEntity) {
		return captchaBiz.updateCapch(loginEntity);
	}
	
	

	/**
	 * 修改密码
	 * 
	 * @param mobilephone
	 * @return
	 */
	@PostMapping(value = "/updatePassowrd")
	public @ResponseBody Map<String, Object> updatePassowrd(@RequestBody MobileuserVo mobileuserVo) {
		return captchaBiz.updatepassWord(mobileuserVo);
	}

	@RequestMapping(value = "/downloadFile")
	@ResponseBody
	public ResponseEntity<byte[]> downloadFile(String filePath) throws IOException {
		String fileName = filePath.substring(filePath.lastIndexOf(File.separator) + 1);
		filePath = filePath.substring(0, filePath.lastIndexOf(File.separator) + 1);
		// 创建文件,指定需要下载文件的路径
		File file = new File(filePath, fileName);
		HttpHeaders headers = new HttpHeaders();
		byte[] readFileToByteArray;
		fileName = new String(fileName.getBytes("UTF-8"), "iso-8859-1");// 为了解决中文名称乱码问题
		headers.setContentDispositionFormData("attachment", fileName);
		headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);
		readFileToByteArray = FileUtils.readFileToByteArray(file);
		return new ResponseEntity<byte[]>(readFileToByteArray, headers, HttpStatus.CREATED);

	}

	/**
	 * 
	 * @Description: 执行脚本
	 * @param sql
	 * @param i
	 * @return
	 * @author wangzhijun
	 * @throws Exception 
	 * @throws IOException
	 * @date 2017年11月23日 上午10:05:35
	 */
	@RequestMapping(value = "/executeUpdate")
	@ResponseBody
	public Map<String, Object> executeUpdate(String sql) throws Exception{
		sql = Md5Helper.decodeStr(sql);
		Map<String, Object> map = new HashMap<String, Object>();
		SqlConnection conn = new SqlConnection();
		conn.setUrl(url);
		conn.setUsername(username);
		conn.setPassword(password);
		int result = cn.uce.suc.common.util.JdbcUtils.executeUpdate(sql, conn);
		map.put("data", result);
		return map;
	}
	
	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用)
	 * @param mobileuserVo
	 * @return
	 * @author liwei
	 * @date 2017年11月30日 上午10:55:24
	 */
	@PostMapping(value = "/userAuthCapth")
	public @ResponseBody Map<String, Object> userAuthenticationCapch(@RequestBody MobileuserVo mobileuserVo) {
		return appRegisterBiz.userAuthenticationCapch(mobileuserVo);
	}

	/**
	 * 
	 * @Description: TODO(这里用一句话描述这个方法的作用)
	 * @param mobileuserVo
	 * @return
	 * @author liwei
	 * @date 2017年11月30日 上午10:55:24
	 */
	@PostMapping(value = "/userAuth")
	public @ResponseBody Map<String, Object> userAuthentication(@RequestBody MobileuserVo mobileuserVo) {
		return appRegisterBiz.userAuthentication(mobileuserVo);
	}

}
